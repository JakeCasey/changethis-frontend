{"version":3,"file":"static/webpack/static/development/pages/plans.js.b7ed40fe0498c847a6b2.hot-update.js","sources":["webpack:///./components/Subscribe.js"],"sourcesContent":["import React from 'react'\nimport { Mutation } from 'react-apollo';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { STRIPE_PUBLIC_KEY } from '../config';\nimport gql from 'graphql-tag';\n\nconst SUBSCRIBE_USER_MUTATION = gql`\n  mutation SUBSCRIBE_USER_MUTATION($token: String!, $planId: String!) {\n   subscribe(tokenId: $token, planId: $planId) {\n     message\n   }\n  }\n`;\n\n\n\nexport default class Subscribe extends React.Component {\n\n    onToken = async (token, planId, subscribe) => {\n        var { id } = token;\n        console.log(id);\n        console.log(planId);\n\n        const res = await subscribe({\n            variables: {\n                tokenId: id,\n                planId: planId,\n            },\n        });\n\n        console.log(res);\n    }\n\n    render() {\n        let { plan: { planId, description } } = this.props;\n        return (\n\n            <Mutation\n                mutation={SUBSCRIBE_USER_MUTATION}\n            // refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n            >\n                {(subscribe, { loading, error }) => (\n                    <div>\n                        <h2>{planId}</h2>\n                        <StripeCheckout\n                            name={planId}\n                            description={description}\n                            token={(token) => this.onToken(token, planId, subscribe)}\n                            stripeKey={STRIPE_PUBLIC_KEY}\n                        />\n                    </div>\n                )}\n            </Mutation>\n\n        )\n\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;;;;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AACA;AACA;AAFA;AADA;AACA;AANA;AAKA;AAOA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAcA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AAGA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAeA;;;;AAxCA;AACA;;;;;A","sourceRoot":""}