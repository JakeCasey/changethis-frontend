{"version":3,"file":"static/webpack/static/development/pages/reporting.js.3c9303e468e49e92320c.hot-update.js","sources":["webpack:///./components/special/Comment.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport { Global as globalState } from './Global';\nimport { Subscribe } from 'unstated';\nimport _ from 'lodash';\nimport styled from 'styled-components';\nimport { Provider } from 'unstated';\n\nconst Commentarea = styled.textarea`\n  width: 100%;\n  height: 100%;\n`;\n\nclass Comment extends Component {\n  _getPlaceholder = () => {\n    var placeholders = [\n      'This needs more SPARKLE.',\n      'Can I get this in comic-sans?',\n      'I like everything about how this looks, except for how it looks.',\n      'How can we “spice” this page up?',\n      'Why don’t we add a few more colors into the mix?',\n      'This shit is gonna go viral',\n      'How about we just “spruce” this up a bit?',\n    ];\n    return _.sample(placeholders);\n    // return 'test';\n  };\n\n  _updateComment = (Global, e) => {\n    var previousState = Global.state.pins;\n\n    console.log(this.props.pin.id);\n    console.log(e.target.value);\n    console.log(previousState);\n    Global._updatePinCommentByID(\n      this.props.pin.id,\n      e.target.value,\n      previousState,\n    );\n  };\n\n  render() {\n    console.log(this.props);\n    return (\n      <Commentarea\n        value={this.props.pin.comment}\n        onChange={e => this._updateComment(this.props.test, e)}\n        placeholder={this._getPlaceholder()}\n      />\n    );\n  }\n}\n\nexport default Comment;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;AACA;AACA;AASA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAKA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AArCA;AACA;AAuCA;;;;A","sourceRoot":""}