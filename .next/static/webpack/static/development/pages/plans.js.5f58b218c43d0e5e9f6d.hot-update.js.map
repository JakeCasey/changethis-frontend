{"version":3,"file":"static/webpack/static/development/pages/plans.js.5f58b218c43d0e5e9f6d.hot-update.js","sources":["webpack:///./components/Subscribe.js"],"sourcesContent":["import React from 'react';\nimport { Mutation } from 'react-apollo';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { CURRENT_USER_QUERY } from './wrappers/User';\nimport { STRIPE_PUBLIC_KEY } from '../config';\nimport SickButton from './styles/SickButton';\n\nimport gql from 'graphql-tag';\n\nconst SUBSCRIBE_USER_MUTATION = gql`\n  mutation SUBSCRIBE_USER_MUTATION($tokenId: String!, $planId: String!) {\n    subscribe(tokenId: $tokenId, planId: $planId) {\n      message\n    }\n  }\n`;\n\nexport default class Subscribe extends React.Component {\n  onToken = async (token, planId, subscribe) => {\n    var { id } = token;\n    const res = await subscribe({\n      variables: {\n        tokenId: id,\n        planId: planId,\n      },\n    });\n  };\n\n  render() {\n    let {\n      plan: { planId, description },\n    } = this.props;\n    return (\n      <Mutation\n        mutation={SUBSCRIBE_USER_MUTATION}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(subscribe, { loading, error }) => (\n          <div>\n            <h2>{planId}</h2>\n            <StripeCheckout\n              name={planId}\n              description={description}\n              token={token => this.onToken(token, planId, subscribe)}\n              stripeKey={STRIPE_PUBLIC_KEY}\n            >\n              <SickButton disabled={loading}>\n                Subscrib{loading ? 'ing' : 'e'}\n              </SickButton>\n            </StripeCheckout>\n          </div>\n        )}\n      </Mutation>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AAFA;AADA;AACA;AAHA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AASA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAiBA;;;;AArCA;AACA;;;;;A","sourceRoot":""}