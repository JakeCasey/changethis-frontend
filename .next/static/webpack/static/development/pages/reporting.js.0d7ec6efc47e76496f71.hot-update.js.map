{"version":3,"file":"static/webpack/static/development/pages/reporting.js.0d7ec6efc47e76496f71.hot-update.js","sources":["webpack:///./components/special/Comment.js","webpack:///./components/special/DesignCanvas.js","webpack:///./components/special/Pin.js","webpack:///./components/special/PinBlock.js","webpack:///./components/special/Reporting.js","webpack:///./components/special/ToolbarOverlay.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nimport { Global as globalState } from \"./Global\";\nimport { Subscribe } from \"unstated\";\nimport _ from \"lodash\";\nimport styled from \"styled-components\";\nimport { Provider } from \"unstated\";\n\nconst Commentarea = styled.textarea`\n  width: 100%;\n  height: 100%;\n`;\n\nclass Comment extends Component {\n  _getPlaceholder = () => {\n    var placeholders = [\n      \"This needs more SPARKLE.\",\n      \"Can I get this in comic-sans?\",\n      \"I like everything about how this looks, except for how it looks.\",\n      \"How can we “spice” this page up?\",\n      \"Why don’t we add a few more colors into the mix?\",\n      \"This shit is gonna go viral\",\n      \"How about we just “spruce” this up a bit?\"\n    ];\n    return _.sample(placeholders);\n    // return 'test';\n  };\n\n  _updateComment = (globalState, e) => {\n    var previousState = globalState.state.pins;\n\n    globalState._updatePinCommentByID(\n      this.props.pin.id,\n      e.target.value,\n      previousState\n    );\n  };\n\n  render() {\n    return (\n      <Commentarea\n        className=\"bg-gray-100\"\n        value={this.props.pin.comment}\n        onChange={e => this._updateComment(this.props.globalState, e)}\n        placeholder={this._getPlaceholder()}\n      />\n    );\n  }\n}\n\nexport default Comment;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fabric } from \"fabric\";\nimport styled from \"styled-components\";\nimport { Container, Subscribe } from \"unstated\";\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\n\nconst CanvasContainer = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  z-index: 2;\n`;\n\nclass DesignCanvas extends React.Component {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired\n  };\n\n  static defaultProps = {\n    width: 1440,\n    height: 1000\n  };\n\n  state = {\n    canvas: null\n  };\n\n  componentDidMount() {\n    this.props.globalState.instantiateCanvas(this);\n  }\n\n  render() {\n    const { width, height } = this.props;\n    var canvas = this.props.globalState;\n    return (\n      <CanvasContainer>\n        <canvas ref={c => (this.c = c)} width={width} height={height} />\n        {/* {canvas.state.canvas} */}\n      </CanvasContainer>\n    );\n  }\n}\n\nexport default withContainers([globalState])(DesignCanvas);\n","import React, { Component } from \"react\";\nimport { Subscribe } from \"unstated\";\nimport { Global as globalState } from \"./Global\";\nimport styled from \"styled-components\";\nimport { Tooltip } from \"react-tippy\";\nimport TooltipWrapper from \"./TooltipWrapper\";\nimport Comment from \"./Comment\";\n\nconst PinDiv = styled.div`\n  width: ${props => props.width + \"px\"};\n  height: ${props => props.height + \"px\"};\n  background-color: lightskyblue;\n  position: absolute;\n  top: ${props =>\n    props.pin.y +\n    (parseInt(props.pin.scrollPosition.y)\n      ? parseInt(props.pin.scrollPosition.y)\n      : 0) +\n    \"px\"};\n  left: ${props => props.pin.x + \"px\"};\n  transform: translateX(${props => -props.width / 2 + \"px\"})\n    translateY(${props => -props.height / 2 + \"px\"});\n  pointer-events: auto;\n`;\n\nconst Pop = styled.div`\n  width: 300px;\n  background: blue;\n`;\n\nclass Pin extends Component {\n  render() {\n    return (\n      <PinDiv key={this.props.key} width={25} height={25} pin={this.props.pin}>\n        <Tooltip\n          trigger=\"click\"\n          interactive={true}\n          html={\n            <TooltipWrapper>\n              <Comment pin={this.props.pin} test={this.props.globalState} />\n            </TooltipWrapper>\n          }\n        >\n          <div style={{ width: \"100%\", height: \"100%\" }} />\n        </Tooltip>\n      </PinDiv>\n    );\n  }\n}\n\nexport default Pin;\n","import withContainers from \"../wrappers/withContainer\";\n\nimport { Global as globalState } from \"./Global\";\nimport React, { Component } from \"react\";\n\nimport SickButton from \"../styles/SickButton\";\n\nclass PinBlock extends Component {\n  state = {};\n\n  render() {\n    var block = this.props.block;\n    return (\n      <div className=\"toolbar_card\">\n        <div className=\"toolbar_header_container\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            className=\"toolbar-icon\"\n          >\n            <path\n              className=\"fill-current text-gray-300\"\n              d=\"M2.24 20.35l6.5-7.5a1 1 0 0 1 1.47-.06l1 1a1 1 0 0 1-.06 1.47l-7.5 6.5c-.93.8-2.22-.48-1.4-1.41z\"\n            />\n            <path\n              className=\"fill-current text-gray-500\"\n              d=\"M15 15.41V18a1 1 0 0 1-.3.7l-1 1a1 1 0 0 1-1.4 0l-8-8a1 1 0 0 1 0-1.4l1-1A1 1 0 0 1 6 9h2.59L13 4.59V3a1 1 0 0 1 1.7-.7l7 7A1 1 0 0 1 21 11h-1.59L15 15.41z\"\n            />\n          </svg>\n          <p className=\"toolbar_header\">Pin</p>\n        </div>\n        {this.props.globalState &&\n          this.props.globalState.state.pins.map((p, index) => {\n            if (p.belongsTo == this.props.block.id) {\n              return <p key={index}>{p.comment}</p>;\n            }\n          })}\n        <SickButton\n          onClick={() =>\n            this.props.globalState.togglePinPlacement(this.props.block.id)\n          }\n        >\n          {this.props.globalState && this.props.globalState.state.isPlacingPin\n            ? \"Stop Placing Pins\"\n            : \"Place Pin\"}\n        </SickButton>\n      </div>\n    );\n  }\n}\n\nexport default withContainers([globalState])(PinBlock);\n","import Error from \"../ErrorMessage\";\nimport React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { withRouter } from \"next/router\";\n\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\n\nimport SickButton from \"../styles/SickButton\";\nimport styled from \"styled-components\";\nimport DesignCanvas from \"./DesignCanvas\";\nimport Toolbar from \"./Toolbar.js\";\nimport { Url } from \"url\";\nimport { endpoint, prodEndPoint } from \"../../config\";\n\nconst backendUrl =\n  process.env.NODE_ENV === \"development\" ? endpoint : prodEndPoint;\n\nconst WorkArea = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n`;\n\nconst UrlBar = styled.div`\n  display: flex;\n`;\n\nconst URL = styled.input`\n  width: 100%;\n`;\nconst CanvasContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-height: 1100px;\n  min-width: 1100px;\n  overflow-y: hidden;\n`;\n\n// https://tobiasahlin.com/spinkit/\nconst LoadingContainer = styled.div`\n  .sk-folding-cube {\n    display: ${props => (props.loading ? \"block\" : \"none\")};\n    margin: 20px auto;\n    width: 40px;\n    height: 40px;\n    -webkit-transform: rotateZ(45deg);\n    transform: rotateZ(45deg);\n  }\n\n  .sk-folding-cube .sk-cube {\n    float: left;\n    width: 50%;\n    height: 50%;\n    -webkit-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    transform: scale(1.1);\n  }\n  .sk-folding-cube .sk-cube:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #4299e1;\n    -webkit-animation: sk-foldCubeAngle 2.4s infinite linear both;\n    animation: sk-foldCubeAngle 2.4s infinite linear both;\n    -webkit-transform-origin: 100% 100%;\n    -ms-transform-origin: 100% 100%;\n    transform-origin: 100% 100%;\n  }\n  .sk-folding-cube .sk-cube2 {\n    -webkit-transform: scale(1.1) rotateZ(90deg);\n    transform: scale(1.1) rotateZ(90deg);\n  }\n  .sk-folding-cube .sk-cube3 {\n    -webkit-transform: scale(1.1) rotateZ(180deg);\n    transform: scale(1.1) rotateZ(180deg);\n  }\n  .sk-folding-cube .sk-cube4 {\n    -webkit-transform: scale(1.1) rotateZ(270deg);\n    transform: scale(1.1) rotateZ(270deg);\n  }\n  .sk-folding-cube .sk-cube2:before {\n    -webkit-animation-delay: 0.3s;\n    animation-delay: 0.3s;\n  }\n  .sk-folding-cube .sk-cube3:before {\n    -webkit-animation-delay: 0.6s;\n    animation-delay: 0.6s;\n  }\n  .sk-folding-cube .sk-cube4:before {\n    -webkit-animation-delay: 0.9s;\n    animation-delay: 0.9s;\n  }\n  @-webkit-keyframes sk-foldCubeAngle {\n    0%,\n    10% {\n      -webkit-transform: perspective(140px) rotateX(-180deg);\n      transform: perspective(140px) rotateX(-180deg);\n      opacity: 0;\n    }\n    25%,\n    75% {\n      -webkit-transform: perspective(140px) rotateX(0deg);\n      transform: perspective(140px) rotateX(0deg);\n      opacity: 1;\n    }\n    90%,\n    100% {\n      -webkit-transform: perspective(140px) rotateY(180deg);\n      transform: perspective(140px) rotateY(180deg);\n      opacity: 0;\n    }\n  }\n\n  @keyframes sk-foldCubeAngle {\n    0%,\n    10% {\n      -webkit-transform: perspective(140px) rotateX(-180deg);\n      transform: perspective(140px) rotateX(-180deg);\n      opacity: 0;\n    }\n    25%,\n    75% {\n      -webkit-transform: perspective(140px) rotateX(0deg);\n      transform: perspective(140px) rotateX(0deg);\n      opacity: 1;\n    }\n    90%,\n    100% {\n      -webkit-transform: perspective(140px) rotateY(180deg);\n      transform: perspective(140px) rotateY(180deg);\n      opacity: 0;\n    }\n  }\n`;\n\nconst LoadingOverlay = styled.div`\n  display: ${props => (props.loading ? \"block\" : \"none\")};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n`;\n\nclass Reporting extends Component {\n  static getInitialProps({ query }) {\n    return { query };\n  }\n\n  state = {\n    url: \"\"\n  };\n\n  componentDidMount() {\n    const { router } = this.props;\n    const url = router.query.url;\n    if (url) {\n      console.log(url);\n      this.setState({ url }, () => {\n        this.fetchPage();\n      });\n    }\n  }\n\n  fetchPage = () => {\n    this.props.globalState.setState({ pageLoading: true });\n    this.props.globalState.fetchPage(this.state.url);\n  };\n\n  updateUrl = e => {\n    var url = e.target.value;\n    this.setState({ url });\n  };\n\n  handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      this.fetchPage();\n    }\n  };\n\n  stopLoading = () => {\n    this.props.globalState.setState({ pageLoading: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <UrlBar className=\"mb-8\">\n          <URL\n            className=\"bg-gray-100 px-8 mr-8 rounded\"\n            value={this.state.url}\n            onChange={e => {\n              this.updateUrl(e);\n            }}\n            onKeyDown={e => this.handleKeyDown(e)}\n            type=\"text\"\n          />\n          <button\n            className=\" text-green-700 mr-4 rounded \"\n            onClick={() => {\n              this.fetchPage();\n            }}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"icon-arrow-thick-right-circle w-10 h-10\"\n              viewBox=\"0 0 24 24\"\n            >\n              <circle\n                cx=\"12\"\n                cy=\"12\"\n                r=\"10\"\n                className=\"fill-current text-green-300\"\n              ></circle>\n              <path\n                d=\"M12 14H7a1 1 0 01-1-1v-2a1 1 0 011-1h5V8a1 1 0 011.7-.7l4 4a1 1 0 010 1.4l-4 4A1 1 0 0112 16v-2z\"\n                className=\"text-green-500 fill-current\"\n              ></path>\n            </svg>\n          </button>\n        </UrlBar>\n        <WorkArea>\n          <CanvasContainer>\n            {this.props.globalState &&\n              this.props.globalState.state.overIframe.map((OverIframe, i) => {\n                var OverIframeComponent = OverIframe.component;\n                return (\n                  <OverIframeComponent key={i} id={OverIframe.belongsTo} />\n                );\n              })}{\" \"}\n            {this.props.globalState && this.props.globalState.state && (\n              <>\n                <LoadingOverlay\n                  loading={this.props.globalState.state.pageLoading}\n                  className=\"bg-gray-100 opacity-75\"\n                />\n                <LoadingContainer\n                  className=\"flex absolute w-full mt-64\"\n                  loading={this.props.globalState.state.pageLoading}\n                >\n                  <div className=\"sk-folding-cube \">\n                    <div className=\"sk-cube1 sk-cube \"></div>\n                    <div className=\"sk-cube2 sk-cube \"></div>\n                    <div className=\"sk-cube4 sk-cube \"></div>\n                    <div className=\"sk-cube3 sk-cube \"></div>\n                  </div>\n                </LoadingContainer>\n                <img\n                  style={{ width: \"1100px\" }}\n                  onLoad={() => this.stopLoading()}\n                  src={this.props.globalState.state.urlSelected}\n                />\n              </>\n            )}\n            {/* <DesignCanvas /> */}\n          </CanvasContainer>\n          <Toolbar />\n        </WorkArea>\n      </div>\n    );\n  }\n}\n\nexport default withContainers([globalState])(withRouter(Reporting));\n","import React, { Component } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Transition } from \"react-spring\";\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\n\nconst ToolbarOverlayDiv = styled.div`\n  transform: translate3d(${props => props.transform3d} + \"%\", 0, 0);\n`;\n\nclass ToolbarOverlay extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.globalState && (\n          <Transition\n            items={this.props.globalState.state.showToolbarOverlay}\n            from={{\n              opacity: 0\n            }}\n            enter={{ opacity: 1 }}\n            leave={{ opacity: 0 }}\n          >\n            {show =>\n              show &&\n              (props => (\n                <ToolbarOverlayDiv\n                  className=\"absolute bottom-0 left-0 right-0 top-0 bg-white\"\n                  style={props}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"icon-add-circle h-12 w-12\"\n                    viewBox=\"0 0 24 24\"\n                    onClick={() =>\n                      this.props.globalState.toggleToolbarOverlay()\n                    }\n                  >\n                    <circle\n                      cx=\"12\"\n                      cy=\"12\"\n                      r=\"10\"\n                      className=\"fill-current text-gray-300\"\n                    ></circle>\n\n                    <path\n                      d=\"M13.41 12l2.83 2.83a1 1 0 01-1.41 1.41L12 13.41l-2.83 2.83a1 1 0 11-1.41-1.41L10.59 12 7.76 9.17a1 1 0 011.41-1.41L12 10.59l2.83-2.83a1 1 0 011.41 1.41L13.41 12z\"\n                      className=\"fill-current text-gray-500\"\n                    ></path>\n                  </svg>\n                  <div className=\"flex flex-col my-4 py-8 px-8 mt-16 shadow absolute bottom-0 left-0 right-0 top-0\">\n                    {this.props.globalState.state.toolbarOverlayContents}\n                  </div>\n                </ToolbarOverlayDiv>\n              ))\n            }\n          </Transition>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withContainers([globalState])(ToolbarOverlay);\n"],"mappings":"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","sourceRoot":""}