{"version":3,"file":"static/webpack/static/development/pages/_app.js.27c63272a4ed14ed0a64.hot-update.js","sources":["webpack:///./lib/withData.js"],"sourcesContent":["import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint, prodEndPoint } from '../config';\nimport { onError } from 'apollo-link-error';\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (networkError) {\n    // Check if error response is JSON\n    try {\n      JSON.parse(networkError.bodyText);\n    } catch (e) {\n      // If not replace parsing error message with real one\n      networkError.message = networkError.bodyText;\n    }\n  }\n});\n\n//https://github.com/apollographql/apollo-client/issues/4193\nfunction createClient({ headers }) {\n  console.log(headers);\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === 'development' ? endpoint : prodEndPoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        },\n        credentials: 'include',\n        // headers: { cookie: headers && headers.cookie },\n        headers: {\n          ...headers,\n        },\n        cookie,\n      });\n    },\n    //local data\n    clientState: {\n      resolvers: {},\n      defaults: {\n        cartOpen: false,\n      },\n    },\n  });\n}\n\nexport default withApollo(createClient);\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAGA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAhBA;AAuBA;AACA;AACA;;;;A","sourceRoot":""}