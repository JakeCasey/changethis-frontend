{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport Error from '../ErrorMessage';\nimport React, { Component } from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport withContainers from '../wrappers/withContainer';\nimport { Global as globalState } from './Global';\nimport SickButton from '../styles/SickButton';\nimport styled from 'styled-components';\nimport DesignCanvas from './DesignCanvas';\nimport Toolbar from './Toolbar.js';\nimport { Url } from 'url';\nimport { frontend, prodFrontend } from '../../config';\nvar Frame = styled.iframe.withConfig({\n  displayName: \"Reporting__Frame\",\n  componentId: \"sc-5smu6h-0\"\n})([\"position:absolute;top:0px;left:0px;right:0px;bottom:0px;width:100%;height:100%;max-width:\", \";\"], function (props) {\n  return props.width;\n});\nvar WorkArea = styled.div.withConfig({\n  displayName: \"Reporting__WorkArea\",\n  componentId: \"sc-5smu6h-1\"\n})([\"display:flex;margin-bottom:30px;\"]);\nvar UrlBar = styled.div.withConfig({\n  displayName: \"Reporting__UrlBar\",\n  componentId: \"sc-5smu6h-2\"\n})([\"display:flex;padding:40px 0px;\"]);\nvar URL = styled.input.withConfig({\n  displayName: \"Reporting__URL\",\n  componentId: \"sc-5smu6h-3\"\n})([\"width:100%;\"]);\nvar CanvasContainer = styled.div.withConfig({\n  displayName: \"Reporting__CanvasContainer\",\n  componentId: \"sc-5smu6h-4\"\n})([\"position:relative;width:100%;height:100%;min-height:1000px;min-width:1000px;overflow-y:hidden;\"]);\n\nvar Test = function Test(props) {\n  var router = useRouter();\n  return React.createElement(\"div\", null, React.createElement(\"p\", null, \"Test\"), _JSON$stringify(router.query), props.children);\n};\n\nvar frontendUrl = process.env.NODE_ENV === 'development' ? frontend : prodFrontend;\n\nvar Reporting =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reporting, _Component);\n\n  function Reporting() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Reporting);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Reporting)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      url: 'http://bugherd.com',\n      urlSelected: frontendUrl + '/api/proxy?url=aHR0cDovL2J1Z2hlcmQuY29t'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reloadIframe\", function () {\n      var urlString = frontendUrl + '/api/proxy?url=' + btoa(_this.state.url);\n      console.log(_this.props); // if (this.props.globalState) {\n\n      _this.props.globalState.setCurrentIframe(urlString); // }\n\n\n      _this.setState({\n        urlSelected: urlString\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateUrl\", function (e) {\n      var url = e.target.value;\n\n      _this.setState({\n        url: url\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (e) {\n      if (e.key === 'Enter') {\n        _this.reloadIframe();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScroll\", function (e) {});\n\n    return _this;\n  }\n\n  _createClass(Reporting, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // if (!this.props.globalState) return <p>Loading...</p>;\n      return React.createElement(\"div\", null, React.createElement(UrlBar, null, React.createElement(URL, {\n        value: this.state.url,\n        onChange: function onChange(e) {\n          _this2.updateUrl(e);\n        },\n        onKeyDown: function onKeyDown(e) {\n          return _this2.handleKeyDown(e);\n        },\n        type: \"text\"\n      }), React.createElement(SickButton, {\n        onClick: function onClick() {\n          _this2.reloadIframe();\n        }\n      }, \"Go\")), React.createElement(WorkArea, null, React.createElement(CanvasContainer, null, this.props.globalState && this.props.globalState.state.overIframe.map(function (OverIframe, i) {\n        var OverIframeComponent = OverIframe.component;\n        return React.createElement(OverIframeComponent, {\n          key: i,\n          id: OverIframe.belongsTo\n        });\n      }), ' ', this.props.globalState && this.props.globalState.state && React.createElement(Frame, {\n        id: \"iframe\",\n        width: this.props.globalState.state.iframe.size.width,\n        src: this.props.globalState.state.currentIframe\n      })), React.createElement(Toolbar, null)));\n    }\n  }]);\n\n  return Reporting;\n}(Component);\n\nexport default withContainers([globalState])(Reporting);","map":null,"metadata":{},"sourceType":"module"}