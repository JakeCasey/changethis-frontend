{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/ToolbarOverlay.js\";\nimport React, { Component } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Transition } from \"react-spring\";\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\nvar ToolbarOverlayDiv = styled.div.withConfig({\n  displayName: \"ToolbarOverlay__ToolbarOverlayDiv\",\n  componentId: \"sc-1wlttng-0\"\n})([\"transform:translate3d(\", \" + \\\"%\\\",0,0);\"], function (props) {\n  return props.transform3d;\n});\n\nvar ToolbarOverlay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToolbarOverlay, _Component);\n\n  function ToolbarOverlay() {\n    _classCallCheck(this, ToolbarOverlay);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ToolbarOverlay).apply(this, arguments));\n  }\n\n  _createClass(ToolbarOverlay, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, this.props.test && React.createElement(Transition, {\n        items: this.props.test.state.showToolbarOverlay,\n        from: {\n          opacity: 0\n        },\n        enter: {\n          opacity: 1\n        },\n        leave: {\n          opacity: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, function (show) {\n        return show && function (props) {\n          return React.createElement(ToolbarOverlayDiv, {\n            className: \"absolute bottom-0 left-0 right-0 top-0 bg-white\",\n            style: props,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"icon-add-circle h-12 w-12\",\n            viewBox: \"0 0 24 24\",\n            onClick: function onClick() {\n              return _this.props.test.toggleToolbarOverlay();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"circle\", {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            className: \"fill-current text-gray-300\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }), React.createElement(\"path\", {\n            d: \"M13.41 12l2.83 2.83a1 1 0 01-1.41 1.41L12 13.41l-2.83 2.83a1 1 0 11-1.41-1.41L10.59 12 7.76 9.17a1 1 0 011.41-1.41L12 10.59l2.83-2.83a1 1 0 011.41 1.41L13.41 12z\",\n            className: \"fill-current text-gray-500\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"flex flex-col my-4 py-8 px-8 mt-16 shadow absolute bottom-0 left-0 right-0 top-0\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, _this.props.test.state.toolbarOverlayContents));\n        };\n      }));\n    }\n  }]);\n\n  return ToolbarOverlay;\n}(Component);\n\nexport default withContainers([globalState])(ToolbarOverlay);","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/ToolbarOverlay.js"],"names":["React","Component","styled","keyframes","Transition","withContainers","Global","globalState","ToolbarOverlayDiv","div","props","transform3d","ToolbarOverlay","test","state","showToolbarOverlay","opacity","show","toggleToolbarOverlay","toolbarOverlayContents"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,UAAtC;AAEA,IAAMC,iBAAiB,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,iDACI,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,WAAV;AAAA,CADT,CAAvB;;IAIMC,c;;;;;;;;;;;;;6BACK;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWG,IAAX,IACC,oBAAC,UAAD;AACE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,IAAX,CAAgBC,KAAhB,CAAsBC,kBAD/B;AAEE,QAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL,SAFR;AAKE,QAAA,KAAK,EAAE;AAAEA,UAAAA,OAAO,EAAE;AAAX,SALT;AAME,QAAA,KAAK,EAAE;AAAEA,UAAAA,OAAO,EAAE;AAAX,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,UAAAC,IAAI;AAAA,eACHA,IAAI,IACH,UAAAP,KAAK;AAAA,iBACJ,oBAAC,iBAAD;AACE,YAAA,SAAS,EAAC,iDADZ;AAEE,YAAA,KAAK,EAAEA,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIE;AACE,YAAA,KAAK,EAAC,4BADR;AAEE,YAAA,SAAS,EAAC,2BAFZ;AAGE,YAAA,OAAO,EAAC,WAHV;AAIE,YAAA,OAAO,EAAE;AAAA,qBAAM,KAAI,CAACA,KAAL,CAAWG,IAAX,CAAgBK,oBAAhB,EAAN;AAAA,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAME;AACE,YAAA,EAAE,EAAC,IADL;AAEE,YAAA,EAAE,EAAC,IAFL;AAGE,YAAA,CAAC,EAAC,IAHJ;AAIE,YAAA,SAAS,EAAC,4BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAaE;AACE,YAAA,CAAC,EAAC,mKADJ;AAEE,YAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,CAJF,EAsBE;AAAK,YAAA,SAAS,EAAC,kFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,KAAI,CAACR,KAAL,CAAWG,IAAX,CAAgBC,KAAhB,CAAsBK,sBADzB,CAtBF,CADI;AAAA,SAFH;AAAA,OARP,CAFJ,CADF;AA8CD;;;;EAhD0BlB,S;;AAmD7B,eAAeI,cAAc,CAAC,CAACE,WAAD,CAAD,CAAd,CAA8BK,cAA9B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Transition } from \"react-spring\";\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\n\nconst ToolbarOverlayDiv = styled.div`\n  transform: translate3d(${props => props.transform3d} + \"%\", 0, 0);\n`;\n\nclass ToolbarOverlay extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.test && (\n          <Transition\n            items={this.props.test.state.showToolbarOverlay}\n            from={{\n              opacity: 0\n            }}\n            enter={{ opacity: 1 }}\n            leave={{ opacity: 0 }}\n          >\n            {show =>\n              show &&\n              (props => (\n                <ToolbarOverlayDiv\n                  className=\"absolute bottom-0 left-0 right-0 top-0 bg-white\"\n                  style={props}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"icon-add-circle h-12 w-12\"\n                    viewBox=\"0 0 24 24\"\n                    onClick={() => this.props.test.toggleToolbarOverlay()}\n                  >\n                    <circle\n                      cx=\"12\"\n                      cy=\"12\"\n                      r=\"10\"\n                      className=\"fill-current text-gray-300\"\n                    ></circle>\n\n                    <path\n                      d=\"M13.41 12l2.83 2.83a1 1 0 01-1.41 1.41L12 13.41l-2.83 2.83a1 1 0 11-1.41-1.41L10.59 12 7.76 9.17a1 1 0 011.41-1.41L12 10.59l2.83-2.83a1 1 0 011.41 1.41L13.41 12z\"\n                      className=\"fill-current text-gray-500\"\n                    ></path>\n                  </svg>\n                  <div className=\"flex flex-col my-4 py-8 px-8 mt-16 shadow absolute bottom-0 left-0 right-0 top-0\">\n                    {this.props.test.state.toolbarOverlayContents}\n                  </div>\n                </ToolbarOverlayDiv>\n              ))\n            }\n          </Transition>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withContainers([globalState])(ToolbarOverlay);\n"]},"metadata":{},"sourceType":"module"}