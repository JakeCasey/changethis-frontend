{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Global as globalState } from './Global';\nimport { Subscribe } from 'unstated';\nimport _ from 'lodash';\nimport styled from 'styled-components';\nimport { Provider } from 'unstated';\nconst Commentarea = styled.textarea.withConfig({\n  displayName: \"Comment__Commentarea\",\n  componentId: \"dimpc7-0\"\n})([\"width:100%;height:100%;\"]);\n\nclass Comment extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_getPlaceholder\", () => {\n      var placeholders = ['This needs more SPARKLE.', 'Can I get this in comic-sans?', 'I like everything about how this looks, except for how it looks.', 'How can we “spice” this page up?', 'Why don’t we add a few more colors into the mix?', 'This shit is gonna go viral', 'How about we just “spruce” this up a bit?'];\n      return _.sample(placeholders); // return 'test';\n    });\n\n    _defineProperty(this, \"_updateComment\", (Global, e) => {\n      var previousState = Global.state.pins;\n      console.log(this.props.pin.id);\n      console.log(e.target.value);\n      console.log(previousState);\n\n      Global._updatePinCommentByID(this.props.pin.id, e.target.value, previousState);\n    });\n  }\n\n  render() {\n    return React.createElement(Commentarea, {\n      value: this.props.pin.comment,\n      onChange: e => this._updateComment(this.props.globalState, e),\n      placeholder: this._getPlaceholder()\n    });\n  }\n\n}\n\nexport default Comment;","map":null,"metadata":{},"sourceType":"module"}