{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport React, { Component } from 'react';\nimport { Subscribe } from 'unstated';\nimport { Global as globalState } from './Global';\nimport styled from 'styled-components';\nimport { Tooltip } from 'react-tippy';\nimport TooltipWrapper from './TooltipWrapper';\nimport Comment from './Comment';\nvar PinDiv = styled.div.withConfig({\n  displayName: \"Pin__PinDiv\",\n  componentId: \"sc-1edaed1-0\"\n})([\"width:\", \";height:\", \";background-color:lightskyblue;position:absolute;top:\", \";left:\", \";transform:translateX(\", \") translateY(\", \");pointer-events:auto;\"], function (props) {\n  return props.width + 'px';\n}, function (props) {\n  return props.height + 'px';\n}, function (props) {\n  return props.pin.y + _parseInt(props.pin.scrollPosition.y) + 'px';\n}, function (props) {\n  return props.pin.x + 'px';\n}, function (props) {\n  return -props.width / 2 + 'px';\n}, function (props) {\n  return -props.height / 2 + 'px';\n});\nvar Pop = styled.div.withConfig({\n  displayName: \"Pin__Pop\",\n  componentId: \"sc-1edaed1-1\"\n})([\"width:300px;background:blue;\"]);\n\nvar Pin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pin, _Component);\n\n  function Pin() {\n    _classCallCheck(this, Pin);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Pin).apply(this, arguments));\n  }\n\n  _createClass(Pin, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PinDiv, {\n        key: this.props.key,\n        width: 25,\n        height: 25,\n        pin: this.props.pin\n      }, React.createElement(Tooltip, {\n        trigger: \"click\",\n        interactive: true,\n        html: React.createElement(TooltipWrapper, null, React.createElement(Comment, {\n          pin: this.props.pin,\n          global: this.props.Global\n        }))\n      }, React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      })));\n    }\n  }]);\n\n  return Pin;\n}(Component);\n\nexport default Pin;","map":null,"metadata":{},"sourceType":"module"}