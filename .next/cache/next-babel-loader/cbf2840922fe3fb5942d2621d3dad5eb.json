{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/PinOverlay.js\";\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\nimport React, { Component } from \"react\";\nimport { Subscribe } from \"unstated\";\nimport styled from \"styled-components\";\nimport shortid from \"shortid\";\nimport SickButton from \"../styles/SickButton\";\nimport { waitForIframeScrollPosition } from \"../../lib/helpers\";\nconst PinOverlayDiv = styled.div.withConfig({\n  displayName: \"PinOverlay__PinOverlayDiv\",\n  componentId: \"sgig1q-0\"\n})([\"position:absolute;top:0px;left:0px;right:0px;bottom:0px;z-index:2;pointer-events:\", \";\"], props => props.showPointerEvents ? \"auto\" : \"none\");\n\nclass PinOverlay extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showPointerEvents: true,\n      pin: {\n        x: \"\",\n        y: \"\",\n        scrollPosition: {\n          y: 0\n        }\n      }\n    });\n\n    _defineProperty(this, \"_onMouseMove\", e => {\n      var rect = e.target.getBoundingClientRect();\n      var x = e.clientX - rect.left; //x position within the element.\n\n      var y = e.clientY - rect.top; //y position within the element.\n      //get scroll position;\n\n      var scroll = 0; // this.setState({ pin: { ...this.state.pin, x: e.screenX, y: e.screenY } });\n\n      this.setState({\n        pin: _objectSpread({}, this.state.pin, {\n          x: x,\n          y: y,\n          scrollPosition: {\n            y: scroll\n          }\n        })\n      });\n    });\n\n    _defineProperty(this, \"_handlePinClick\", Global => {\n      Global._placePin(this.state.pin); // Global._placePin(this.state.pin);\n\n    });\n\n    _defineProperty(this, \"_removePointerEvents\", () => {\n      this.setState({\n        showPointerEvents: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      pin: {\n        belongsTo: this.props.id,\n        x: \"\",\n        y: \"\",\n        scrollPosition: {\n          y: 0\n        },\n        comment: \"\"\n      }\n    });\n  }\n\n  render() {\n    var block = this.props.block;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Subscribe, {\n      to: [globalState],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, globalState => React.createElement(PinOverlayDiv, {\n      showPointerEvents: this.state.showPointerEvents,\n      onClick: () => this._handlePinClick(globalState),\n      onMouseMove: e => this._onMouseMove(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n} // export default withContainers([globalState])(PinOverlay);\n\n\nexport default PinOverlay;","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/PinOverlay.js"],"names":["withContainers","Global","globalState","React","Component","Subscribe","styled","shortid","SickButton","waitForIframeScrollPosition","PinOverlayDiv","div","props","showPointerEvents","PinOverlay","pin","x","y","scrollPosition","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","scroll","setState","state","_placePin","componentDidMount","belongsTo","id","comment","render","block","_handlePinClick","_onMouseMove"],"mappings":"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","sourcesContent":["import withContainers from \"../wrappers/withContainer\";\n\nimport { Global as globalState } from \"./Global\";\nimport React, { Component } from \"react\";\nimport { Subscribe } from \"unstated\";\n\nimport styled from \"styled-components\";\nimport shortid from \"shortid\";\n\nimport SickButton from \"../styles/SickButton\";\nimport { waitForIframeScrollPosition } from \"../../lib/helpers\";\n\nconst PinOverlayDiv = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  z-index: 2;\n  pointer-events: ${props => (props.showPointerEvents ? \"auto\" : \"none\")};\n`;\n\nclass PinOverlay extends Component {\n  state = {\n    showPointerEvents: true,\n    pin: { x: \"\", y: \"\", scrollPosition: { y: 0 } }\n  };\n\n  componentDidMount() {\n    this.setState({\n      pin: {\n        belongsTo: this.props.id,\n        x: \"\",\n        y: \"\",\n        scrollPosition: { y: 0 },\n        comment: \"\"\n      }\n    });\n  }\n\n  _onMouseMove = e => {\n    var rect = e.target.getBoundingClientRect();\n    var x = e.clientX - rect.left; //x position within the element.\n    var y = e.clientY - rect.top; //y position within the element.\n\n    //get scroll position;\n    var scroll = 0;\n\n    // this.setState({ pin: { ...this.state.pin, x: e.screenX, y: e.screenY } });\n    this.setState({\n      pin: { ...this.state.pin, x: x, y: y, scrollPosition: { y: scroll } }\n    });\n  };\n\n  _handlePinClick = Global => {\n    Global._placePin(this.state.pin);\n\n    // Global._placePin(this.state.pin);\n  };\n\n  _removePointerEvents = () => {\n    this.setState({ showPointerEvents: false });\n  };\n\n  render() {\n    var block = this.props.block;\n    return (\n      <div>\n        <Subscribe to={[globalState]}>\n          {globalState => (\n            <PinOverlayDiv\n              showPointerEvents={this.state.showPointerEvents}\n              onClick={() => this._handlePinClick(globalState)}\n              onMouseMove={e => this._onMouseMove(e)}\n            ></PinOverlayDiv>\n          )}\n        </Subscribe>\n      </div>\n    );\n  }\n}\n\n// export default withContainers([globalState])(PinOverlay);\nexport default PinOverlay;\n"]},"metadata":{},"sourceType":"module"}