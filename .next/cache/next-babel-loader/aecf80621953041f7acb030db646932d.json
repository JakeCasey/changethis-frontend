{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/Toolbar.js\";\nimport React, { Component } from \"react\";\nimport SickButton from \"../styles/SickButton\";\nimport styled from \"styled-components\";\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\nimport ToolbarOverlay from \"./ToolbarOverlay\";\nimport BlockList from \"./BlockList\";\nimport btoa from \"btoa\";\nimport Clipboard from \"react-clipboard.js\"; // Blocks\n\nimport SimpleTextBlock from \"./SimpleTextBlock\";\nimport PinBlock from \"./PinBlock\"; // const ToolbarDiv = styled.div`\n//   width: 100%;\n//   max-width: 300px;\n//   z-index: 10;\n//   background-color: #d2ddec;\n//   padding: 40px;\n//   position: relative;\n//   p {\n//     margin: 0px;\n//   }\n// `;\n\nvar ToolbarDiv =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToolbarDiv, _Component);\n\n  function ToolbarDiv() {\n    _classCallCheck(this, ToolbarDiv);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ToolbarDiv).apply(this, arguments));\n  }\n\n  _createClass(ToolbarDiv, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container relative w-1/5 flex flex-col  ml-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return ToolbarDiv;\n}(Component);\n\nvar Toolbar =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Toolbar, _Component2);\n\n  function Toolbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Toolbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Toolbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      base64: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showBlocks\", function () {\n      //place component in state\n      _this.props.test.putComponentInToolbar(React.createElement(BlockList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })); //open toolbar\n\n\n      _this.props.test.toggleToolbarOverlay();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showCanvasOptions\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handlebase64Update\", function (e) {\n      _this.setState({\n        base64: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateState\", function () {\n      _this.props.test._loadStateFromHash(_this.state.base64);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_copyState\", function () {\n      console.log(_JSON$stringify(_this.props.test.state));\n      return btoa(_JSON$stringify(_this.props.test.state));\n    });\n\n    return _this;\n  }\n\n  _createClass(Toolbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var canvas = this.props.test; // var toolbar = this.props.test.state.toolbar;\n\n      return React.createElement(ToolbarDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.showBlocks();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        className: \"icon-add-circle h-12 w-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"circle\", {\n        cx: \"12\",\n        cy: \"12\",\n        r: \"10\",\n        className: \"fill-current text-gray-300\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"path\", {\n        className: \"fill-current text-gray-500\",\n        d: \"M13 11h4a1 1 0 0 1 0 2h-4v4a1 1 0 0 1-2 0v-4H7a1 1 0 0 1 0-2h4V7a1 1 0 0 1 2 0v4z\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))), canvas && canvas.state.toolbar.map(function (block, i) {\n        var type = block.type;\n\n        switch (type) {\n          case \"text\":\n            return React.createElement(SimpleTextBlock, {\n              key: i,\n              block: block,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98\n              },\n              __self: this\n            });\n            break;\n\n          case \"pin\":\n            return React.createElement(PinBlock, {\n              key: i,\n              block: block,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101\n              },\n              __self: this\n            });\n            break;\n        }\n      }), React.createElement(\"div\", {\n        className: \"toolbar_card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex justify-between mb-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        className: \"w-6 h-6 mr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"path\", {\n        className: \"fill-current text-gray-300\",\n        d: \"M6 2h6v6c0 1.1.9 2 2 2h6v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4c0-1.1.9-2 2-2z\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"path\", {\n        className: \"fill-current text-gray-500\",\n        d: \"M13 15h2a1 1 0 0 1 0 2h-2v2a1 1 0 0 1-2 0v-2H9a1 1 0 0 1 0-2h2v-2a1 1 0 0 1 2 0v2z\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"polygon\", {\n        className: \"fill-current text-gray-500\",\n        points: \"14 2 20 8 14 8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"toolbar_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Save\")), this.props.test && React.createElement(React.Fragment, null, React.createElement(Clipboard, {\n        className: \"bg-blue-100 text-blue-700 py-2 px-4 rounded \",\n        \"data-clipboard-text\": this._copyState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"font-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Copy State\"))), React.createElement(\"textarea\", {\n        onChange: function onChange(e) {\n          return _this2.handlebase64Update(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(SickButton, {\n        onClick: function onClick() {\n          return _this2._updateState();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \" \", \"Update State\")), React.createElement(ToolbarOverlay, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Toolbar;\n}(Component);\n\nexport default withContainers([globalState])(Toolbar);","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/Toolbar.js"],"names":["React","Component","SickButton","styled","withContainers","Global","globalState","ToolbarOverlay","BlockList","btoa","Clipboard","SimpleTextBlock","PinBlock","ToolbarDiv","props","children","Toolbar","base64","test","putComponentInToolbar","toggleToolbarOverlay","e","setState","target","value","_loadStateFromHash","state","console","log","canvas","showBlocks","toolbar","map","block","i","type","_copyState","handlebase64Update","_updateState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SickButton from \"../styles/SickButton\";\nimport styled from \"styled-components\";\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\nimport ToolbarOverlay from \"./ToolbarOverlay\";\nimport BlockList from \"./BlockList\";\nimport btoa from \"btoa\";\nimport Clipboard from \"react-clipboard.js\";\n\n// Blocks\nimport SimpleTextBlock from \"./SimpleTextBlock\";\nimport PinBlock from \"./PinBlock\";\n\n// const ToolbarDiv = styled.div`\n//   width: 100%;\n//   max-width: 300px;\n//   z-index: 10;\n//   background-color: #d2ddec;\n//   padding: 40px;\n//   position: relative;\n\n//   p {\n//     margin: 0px;\n//   }\n// `;\n\nclass ToolbarDiv extends Component {\n  render() {\n    return (\n      <div className=\"container relative w-1/5 flex flex-col  ml-8\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nclass Toolbar extends Component {\n  // state = {\n  //   base64: btoa(JSON.stringify(this.props.test.state)),\n  // };\n\n  state = {\n    base64: \"\"\n  };\n\n  showBlocks = () => {\n    //place component in state\n    this.props.test.putComponentInToolbar(<BlockList />);\n\n    //open toolbar\n    this.props.test.toggleToolbarOverlay();\n  };\n\n  showCanvasOptions = () => {};\n\n  handlebase64Update = e => {\n    this.setState({ base64: e.target.value });\n  };\n\n  _updateState = () => {\n    this.props.test._loadStateFromHash(this.state.base64);\n  };\n\n  _copyState = () => {\n    console.log(JSON.stringify(this.props.test.state));\n    return btoa(JSON.stringify(this.props.test.state));\n  };\n\n  render() {\n    let canvas = this.props.test;\n    // var toolbar = this.props.test.state.toolbar;\n    return (\n      <ToolbarDiv>\n        <button onClick={() => this.showBlocks()}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            className=\"icon-add-circle h-12 w-12\"\n          >\n            <circle\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              className=\"fill-current text-gray-300\"\n            />\n            <path\n              className=\"fill-current text-gray-500\"\n              d=\"M13 11h4a1 1 0 0 1 0 2h-4v4a1 1 0 0 1-2 0v-4H7a1 1 0 0 1 0-2h4V7a1 1 0 0 1 2 0v4z\"\n            />\n          </svg>\n        </button>\n        {canvas &&\n          canvas.state.toolbar.map((block, i) => {\n            var type = block.type;\n            switch (type) {\n              case \"text\":\n                return <SimpleTextBlock key={i} block={block} />;\n                break;\n              case \"pin\":\n                return <PinBlock key={i} block={block} />;\n                break;\n            }\n          })}\n\n        <div className=\"toolbar_card\">\n          <div className=\"flex justify-between mb-8\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              className=\"w-6 h-6 mr-4\"\n            >\n              <path\n                className=\"fill-current text-gray-300\"\n                d=\"M6 2h6v6c0 1.1.9 2 2 2h6v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4c0-1.1.9-2 2-2z\"\n              />\n              <path\n                className=\"fill-current text-gray-500\"\n                d=\"M13 15h2a1 1 0 0 1 0 2h-2v2a1 1 0 0 1-2 0v-2H9a1 1 0 0 1 0-2h2v-2a1 1 0 0 1 2 0v2z\"\n              />\n              <polygon\n                className=\"fill-current text-gray-500\"\n                points=\"14 2 20 8 14 8\"\n              />\n            </svg>\n            <p className=\"toolbar_header\">Save</p>\n          </div>\n          {this.props.test && (\n            <>\n              <Clipboard\n                className=\"bg-blue-100 text-blue-700 py-2 px-4 rounded \"\n                data-clipboard-text={this._copyState}\n              >\n                <span className=\"font-bold\">Copy State</span>\n              </Clipboard>\n            </>\n          )}\n\n          <textarea onChange={e => this.handlebase64Update(e)} />\n\n          <SickButton onClick={() => this._updateState()}>\n            {\" \"}\n            Update State\n          </SickButton>\n        </div>\n\n        <ToolbarOverlay />\n      </ToolbarDiv>\n    );\n  }\n}\n\nexport default withContainers([globalState])(Toolbar);\n"]},"metadata":{},"sourceType":"module"}