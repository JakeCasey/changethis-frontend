{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/Comment.js\";\nimport React, { Component } from 'react';\nimport { Global as globalState } from './Global';\nimport { Subscribe } from 'unstated';\nimport _ from 'lodash';\nimport styled from 'styled-components';\nimport { Provider } from 'unstated';\nvar Commentarea = styled.textarea.withConfig({\n  displayName: \"Comment__Commentarea\",\n  componentId: \"dimpc7-0\"\n})([\"width:100%;height:100%;\"]);\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comment, _Component);\n\n  function Comment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_getPlaceholder\", function () {\n      var placeholders = ['This needs more SPARKLE.', 'Can I get this in comic-sans?', 'I like everything about how this looks, except for how it looks.', 'How can we “spice” this page up?', 'Why don’t we add a few more colors into the mix?', 'This shit is gonna go viral', 'How about we just “spruce” this up a bit?'];\n      return _.sample(placeholders); // return 'test';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateComment\", function (Global, e) {\n      var previousState = Global.state.pins;\n      console.log(_this.props.pin.id);\n      console.log(e.target.value);\n      console.log(previousState);\n\n      Global._updatePinCommentByID(_this.props.pin.id, e.target.value, previousState);\n    });\n\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Commentarea, {\n        value: this.props.pin.comment,\n        onChange: function onChange(e) {\n          return _this2._updateComment(_this2.props.globalState, e);\n        },\n        placeholder: this._getPlaceholder(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Comment;\n}(Component);\n\nexport default Comment;","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/Comment.js"],"names":["React","Component","Global","globalState","Subscribe","_","styled","Provider","Commentarea","textarea","Comment","placeholders","sample","e","previousState","state","pins","console","log","props","pin","id","target","value","_updatePinCommentByID","comment","_updateComment","_getPlaceholder"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,UAAtC;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,UAAzB;AAEA,IAAMC,WAAW,GAAGF,MAAM,CAACG,QAAV;AAAA;AAAA;AAAA,+BAAjB;;IAKMC,O;;;;;;;;;;;;;;;;;;sEACc,YAAM;AACtB,UAAIC,YAAY,GAAG,CACjB,0BADiB,EAEjB,+BAFiB,EAGjB,kEAHiB,EAIjB,kCAJiB,EAKjB,kDALiB,EAMjB,6BANiB,EAOjB,2CAPiB,CAAnB;AASA,aAAON,CAAC,CAACO,MAAF,CAASD,YAAT,CAAP,CAVsB,CAWtB;AACD,K;;qEAEgB,UAACT,MAAD,EAASW,CAAT,EAAe;AAC9B,UAAIC,aAAa,GAAGZ,MAAM,CAACa,KAAP,CAAaC,IAAjC;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWC,GAAX,CAAeC,EAA3B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACS,MAAF,CAASC,KAArB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;;AACAZ,MAAAA,MAAM,CAACsB,qBAAP,CACE,MAAKL,KAAL,CAAWC,GAAX,CAAeC,EADjB,EAEER,CAAC,CAACS,MAAF,CAASC,KAFX,EAGET,aAHF;AAKD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWC,GAAX,CAAeK,OADxB;AAEE,QAAA,QAAQ,EAAE,kBAAAZ,CAAC;AAAA,iBAAI,MAAI,CAACa,cAAL,CAAoB,MAAI,CAACP,KAAL,CAAWhB,WAA/B,EAA4CU,CAA5C,CAAJ;AAAA,SAFb;AAGE,QAAA,WAAW,EAAE,KAAKc,eAAL,EAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EApCmB1B,S;;AAuCtB,eAAeS,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { Global as globalState } from './Global';\nimport { Subscribe } from 'unstated';\nimport _ from 'lodash';\nimport styled from 'styled-components';\nimport { Provider } from 'unstated';\n\nconst Commentarea = styled.textarea`\n  width: 100%;\n  height: 100%;\n`;\n\nclass Comment extends Component {\n  _getPlaceholder = () => {\n    var placeholders = [\n      'This needs more SPARKLE.',\n      'Can I get this in comic-sans?',\n      'I like everything about how this looks, except for how it looks.',\n      'How can we “spice” this page up?',\n      'Why don’t we add a few more colors into the mix?',\n      'This shit is gonna go viral',\n      'How about we just “spruce” this up a bit?',\n    ];\n    return _.sample(placeholders);\n    // return 'test';\n  };\n\n  _updateComment = (Global, e) => {\n    var previousState = Global.state.pins;\n\n    console.log(this.props.pin.id);\n    console.log(e.target.value);\n    console.log(previousState);\n    Global._updatePinCommentByID(\n      this.props.pin.id,\n      e.target.value,\n      previousState,\n    );\n  };\n\n  render() {\n    return (\n      <Commentarea\n        value={this.props.pin.comment}\n        onChange={e => this._updateComment(this.props.globalState, e)}\n        placeholder={this._getPlaceholder()}\n      />\n    );\n  }\n}\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}