{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/SimpleTextBlock.js\";\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\nimport React, { Component } from \"react\";\n\nclass SimpleTextBlock extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"updateTextBlock\", e => {\n      let value = e.target.value;\n      let name = e.target.name;\n      let textBlock = this.props.block;\n      textBlock[name] = value;\n      this.props.globalState.updateTextBlock({\n        textBlock\n      });\n    });\n  }\n\n  render() {\n    var block = this.props.block;\n    return React.createElement(\"div\", {\n      className: \"toolbar_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"toolbar_header_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      className: \"toolbar-icon\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: \"M6 2h6v6c0 1.1.9 2 2 2h6v10a2 2 0 01-2 2H6a2 2 0 01-2-2V4c0-1.1.9-2 2-2zm2 11a1 1 0 000 2h8a1 1 0 000-2H8zm0 4a1 1 0 000 2h4a1 1 0 000-2H8z\",\n      className: \"text-gray-300 fill-current\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      d: \"M14 2L20 8 14 8z\",\n      className: \"text-gray-500 fill-current\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"toolbar_header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Text\")), React.createElement(\"input\", {\n      name: \"label\",\n      value: this.props.block.label,\n      onChange: e => this.updateTextBlock(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"value\",\n      value: this.props.block.value,\n      onChange: e => this.updateTextBlock(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withContainers([globalState])(SimpleTextBlock);","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/SimpleTextBlock.js"],"names":["withContainers","Global","globalState","React","Component","SimpleTextBlock","e","value","target","name","textBlock","props","block","updateTextBlock","render","label"],"mappings":";;AAAA,OAAOA,cAAP,MAA2B,2BAA3B;AACA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,UAAtC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AAAA;AAAA;;AAAA,mCAC9B,EAD8B;;AAAA,6CAGpBE,CAAC,IAAI;AACrB,UAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,UAAIE,IAAI,GAAGH,CAAC,CAACE,MAAF,CAASC,IAApB;AACA,UAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAA3B;AACAF,MAAAA,SAAS,CAACD,IAAD,CAAT,GAAkBF,KAAlB;AACA,WAAKI,KAAL,CAAWT,WAAX,CAAuBW,eAAvB,CAAuC;AAAEH,QAAAA;AAAF,OAAvC;AACD,KATqC;AAAA;;AAWtCI,EAAAA,MAAM,GAAG;AACP,QAAIF,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAC,4BADR;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AACE,MAAA,CAAC,EAAC,6IADJ;AAEE,MAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EASE;AACE,MAAA,CAAC,EAAC,kBADJ;AAEE,MAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,EAeE;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,CADF,EAkBE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBG,KAF1B;AAGE,MAAA,QAAQ,EAAET,CAAC,IAAI,KAAKO,eAAL,CAAqBP,CAArB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EAuBE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWC,KAAX,CAAiBL,KAF1B;AAGE,MAAA,QAAQ,EAAED,CAAC,IAAI,KAAKO,eAAL,CAAqBP,CAArB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF;AA+BD;;AA5CqC;;AA+CxC,eAAeN,cAAc,CAAC,CAACE,WAAD,CAAD,CAAd,CAA8BG,eAA9B,CAAf","sourcesContent":["import withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\nimport React, { Component } from \"react\";\n\nclass SimpleTextBlock extends Component {\n  state = {};\n\n  updateTextBlock = e => {\n    let value = e.target.value;\n    let name = e.target.name;\n    let textBlock = this.props.block;\n    textBlock[name] = value;\n    this.props.globalState.updateTextBlock({ textBlock });\n  };\n\n  render() {\n    var block = this.props.block;\n    return (\n      <div className=\"toolbar_card\">\n        <div className=\"toolbar_header_container\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"toolbar-icon\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              d=\"M6 2h6v6c0 1.1.9 2 2 2h6v10a2 2 0 01-2 2H6a2 2 0 01-2-2V4c0-1.1.9-2 2-2zm2 11a1 1 0 000 2h8a1 1 0 000-2H8zm0 4a1 1 0 000 2h4a1 1 0 000-2H8z\"\n              className=\"text-gray-300 fill-current\"\n            ></path>\n            <path\n              d=\"M14 2L20 8 14 8z\"\n              className=\"text-gray-500 fill-current\"\n            ></path>\n          </svg>\n          <p className=\"toolbar_header\">Text</p>\n        </div>\n        <input\n          name=\"label\"\n          value={this.props.block.label}\n          onChange={e => this.updateTextBlock(e)}\n        ></input>\n        <input\n          name=\"value\"\n          value={this.props.block.value}\n          onChange={e => this.updateTextBlock(e)}\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default withContainers([globalState])(SimpleTextBlock);\n"]},"metadata":{},"sourceType":"module"}