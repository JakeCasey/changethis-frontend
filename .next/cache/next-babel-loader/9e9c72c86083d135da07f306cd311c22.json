{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Fragment } from \"react\";\nimport { Container, Subscribe } from \"unstated\";\nimport PinOverlay from \"./PinOverlay\";\nimport ShowPins from \"./ShowPins\";\nimport shortId from \"shortid\";\nimport _ from \"lodash\";\nimport { frontend, prodFrontend } from \"../../config\";\nimport { endpoint, prodEndPoint } from \"../../config\";\nvar backendUrl = process.env.NODE_ENV === \"development\" ? endpoint : prodEndPoint;\nvar frontendUrl = process.env.NODE_ENV === \"development\" ? frontend : prodFrontend;\n\nvar Global =\n/*#__PURE__*/\nfunction (_Container) {\n  _inherits(Global, _Container);\n\n  function Global() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Global);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Global)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      overIframe: [],\n      urlSelected: backendUrl + \"/api/screenshot?url=http://bugherd.com\",\n      pageLoading: true,\n      showPins: true,\n      showCanvas: false,\n      canvas: null,\n      iframe: {\n        size: {\n          height: 0,\n          width: 200\n        }\n      },\n      showToolbarOverlay: false,\n      toolbarOverlayContents: \"\",\n      toolbar: [],\n      isPlacingPin: false,\n      pins: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addSimpleTextBlock\", function () {\n      // 1. Make the overlay disappear.\n      _this.toggleToolbarOverlay(); // 2. Build our simple text block.\n\n\n      var simpleText = {\n        id: shortId.generate(),\n        type: \"text\",\n        value: \"test\",\n        label: \"test\"\n      }; // 3. Add it to our toolbar.\n\n      var toolbar = _this.state.toolbar;\n      toolbar.push(simpleText);\n\n      _this.setState({\n        toolbar: toolbar\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateTextBlock\", function (textBlock) {\n      var value = textBlock.value,\n          label = textBlock.label,\n          id = textBlock.id;\n      console.log(value, label, id);\n\n      var simpleText = _this.state.toolbar.find(function (x) {\n        return x.id === id;\n      });\n\n      console.log(simpleText);\n      simpleText.value = value;\n      simpleText.label = label;\n\n      _this.setState({\n        toolbar: [].concat(_toConsumableArray(_this.state.toolbar), [simpleText])\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addPinBlock\", function () {\n      _this.toggleToolbarOverlay();\n\n      _this.setState({\n        overIframe: [].concat(_toConsumableArray(_this.state.overIframe), [{\n          belongsTo: \"test\",\n          component: ShowPins\n        }])\n      });\n\n      var pin = {\n        id: shortId.generate(),\n        type: \"pin\"\n      }; //place pin view over iframe\n\n      var toolbar = _this.state.toolbar;\n      toolbar.push(pin);\n\n      _this.setState({\n        toolbar: toolbar\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"putComponentInToolbar\", function (component) {\n      _this.setState({\n        toolbarOverlayContents: component\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleToolbarOverlay\", function () {\n      _this.setState({\n        showToolbarOverlay: !_this.state.showToolbarOverlay\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"togglePinPlacement\", function (id, block) {\n      if (_this.state.isPlacingPin) {\n        var stat = _this.state.overIframe;\n        stat = _.filter(stat, function (i) {\n          return i.belongsTo != id;\n        });\n\n        _this.setState({\n          overIframe: stat,\n          isPlacingPin: false\n        });\n      } else {\n        _this.setState({\n          overIframe: [].concat(_toConsumableArray(_this.state.overIframe), [{\n            belongsTo: id,\n            component: PinOverlay\n          }]),\n          isPlacingPin: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addPath\", function () {\n      var canvas = _this.state.canvas;\n      var path = new fabric.Path(\"M 0 0 L 200 100 L 170 200 z\");\n      path.set({\n        left: 120,\n        top: 120\n      });\n      canvas.add(path);\n\n      _this.setState({\n        canvas: canvas\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addArrow\", function () {\n      var canvas = _this.state.canvas;\n      fabric.loadSVGFromURL(\"/static/images/arrow.svg\", function (objects, options) {\n        var obj = fabric.util.groupSVGElements(objects, options);\n        canvas.add(obj).renderAll();\n      });\n\n      _this.setState({\n        canvas: canvas\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showCanvas\", function () {\n      _this.setState({\n        showCanvas: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideCanvas\", function () {\n      _this.setState({\n        showCanvas: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"instantiateCanvas\", function (that) {\n      var canvas = new fabric.Canvas(that.c);\n\n      _this.setState({\n        canvas: canvas\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n      var canvas = _this.state.canvas;\n      var canvas = canvas.clear();\n\n      _this.setState({\n        canvas: canvas\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_placePin\", function (pin) {\n      pin.id = shortId.generate();\n      var pins = _this.state.pins;\n      pins.push(pin);\n\n      _this.setState({\n        pins: pins\n      });\n\n      console.log(\"Pin placed.\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updatePinCommentByID\", function (id, text, previousState) {\n      var that = previousState;\n      _.find(that, {\n        id: id\n      }).comment = text;\n\n      _this.setState({\n        pins: that\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_loadStateFromHash\", function (hash) {\n      var hash = atob(hash);\n      var previousState = _this.state;\n      hash = JSON.parse(hash);\n      console.log(\"Hash loaded.\");\n\n      if (hash.pins.length > 0) {\n        previousState.overIframe = [{\n          belongsTo: \"test\",\n          component: ShowPins\n        }];\n      }\n\n      previousState.pins = _.cloneDeep(hash.pins);\n      previousState.toolbar = hash.toolbar;\n      previousState.urlSelected = hash.urlSelected;\n      previousState.isPlacingPin = false;\n      previousState.pageLoading = true;\n\n      _this.setState(_objectSpread({}, previousState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetUI\", function () {\n      _this.setState({\n        overIframe: [],\n        pageLoading: true,\n        showPins: true,\n        showCanvas: false,\n        canvas: null,\n        iframe: {\n          size: {\n            height: 0,\n            width: 200\n          }\n        },\n        showToolbarOverlay: false,\n        toolbarOverlayContents: \"\",\n        toolbar: [],\n        isPlacingPin: false,\n        pins: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchPage\", function (url) {\n      _this.resetUI();\n\n      _this.setState({\n        pageLoading: true,\n        urlSelected: backendUrl + \"/api/screenshot?url=\" + url\n      });\n    });\n\n    return _this;\n  }\n\n  return Global;\n}(Container);\n\nexport { Global };","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/Global.js"],"names":["React","Fragment","Container","Subscribe","PinOverlay","ShowPins","shortId","_","frontend","prodFrontend","endpoint","prodEndPoint","backendUrl","process","env","NODE_ENV","frontendUrl","Global","overIframe","urlSelected","pageLoading","showPins","showCanvas","canvas","iframe","size","height","width","showToolbarOverlay","toolbarOverlayContents","toolbar","isPlacingPin","pins","toggleToolbarOverlay","simpleText","id","generate","type","value","label","state","push","setState","textBlock","console","log","find","x","belongsTo","component","pin","block","stat","filter","i","path","fabric","Path","set","left","top","add","loadSVGFromURL","objects","options","obj","util","groupSVGElements","renderAll","that","Canvas","c","clear","text","previousState","comment","hash","atob","JSON","parse","length","cloneDeep","url","resetUI"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,UAArC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,cAAvC;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,cAAvC;AAEA,IAAMC,UAAU,GACdC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCL,QAAzC,GAAoDC,YADtD;AAEA,IAAIK,WAAW,GACbH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCP,QAAzC,GAAoDC,YADtD;;IAGMQ,M;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,WAAW,EAAEP,UAAU,GAAG,wCAFpB;AAGNQ,MAAAA,WAAW,EAAE,IAHP;AAINC,MAAAA,QAAQ,EAAE,IAJJ;AAKNC,MAAAA,UAAU,EAAE,KALN;AAMNC,MAAAA,MAAM,EAAE,IANF;AAONC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,MAAM,EAAE,CAAV;AAAaC,UAAAA,KAAK,EAAE;AAApB;AADA,OAPF;AAUNC,MAAAA,kBAAkB,EAAE,KAVd;AAWNC,MAAAA,sBAAsB,EAAE,EAXlB;AAYNC,MAAAA,OAAO,EAAE,EAZH;AAaNC,MAAAA,YAAY,EAAE,KAbR;AAcNC,MAAAA,IAAI,EAAE;AAdA,K;;yEAiBa,YAAM;AACzB;AACA,YAAKC,oBAAL,GAFyB,CAIzB;;;AACA,UAAIC,UAAU,GAAG;AACfC,QAAAA,EAAE,EAAE7B,OAAO,CAAC8B,QAAR,EADW;AAEfC,QAAAA,IAAI,EAAE,MAFS;AAGfC,QAAAA,KAAK,EAAE,MAHQ;AAIfC,QAAAA,KAAK,EAAE;AAJQ,OAAjB,CALyB,CAYzB;;AACA,UAAIT,OAAO,GAAG,MAAKU,KAAL,CAAWV,OAAzB;AACAA,MAAAA,OAAO,CAACW,IAAR,CAAaP,UAAb;;AAEA,YAAKQ,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAPA;AAAF,OAAd;AACD,K;;sEAEiB,UAAAa,SAAS,EAAI;AAAA,UACvBL,KADuB,GACFK,SADE,CACvBL,KADuB;AAAA,UAChBC,KADgB,GACFI,SADE,CAChBJ,KADgB;AAAA,UACTJ,EADS,GACFQ,SADE,CACTR,EADS;AAE7BS,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmBC,KAAnB,EAA0BJ,EAA1B;;AACA,UAAID,UAAU,GAAG,MAAKM,KAAL,CAAWV,OAAX,CAAmBgB,IAAnB,CAAwB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACZ,EAAF,KAASA,EAAb;AAAA,OAAzB,CAAjB;;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;AACAA,MAAAA,UAAU,CAACI,KAAX,GAAmBA,KAAnB;AACAJ,MAAAA,UAAU,CAACK,KAAX,GAAmBA,KAAnB;;AAEA,YAAKG,QAAL,CAAc;AAAEZ,QAAAA,OAAO,+BAAM,MAAKU,KAAL,CAAWV,OAAjB,IAA0BI,UAA1B;AAAT,OAAd;AACD,K;;kEAEa,YAAM;AAClB,YAAKD,oBAAL;;AAEA,YAAKS,QAAL,CAAc;AACZxB,QAAAA,UAAU,+BACL,MAAKsB,KAAL,CAAWtB,UADN,IAER;AAAE8B,UAAAA,SAAS,EAAE,MAAb;AAAqBC,UAAAA,SAAS,EAAE5C;AAAhC,SAFQ;AADE,OAAd;;AAOA,UAAI6C,GAAG,GAAG;AACRf,QAAAA,EAAE,EAAE7B,OAAO,CAAC8B,QAAR,EADI;AAERC,QAAAA,IAAI,EAAE;AAFE,OAAV,CAVkB,CAelB;;AAEA,UAAIP,OAAO,GAAG,MAAKU,KAAL,CAAWV,OAAzB;AAEAA,MAAAA,OAAO,CAACW,IAAR,CAAaS,GAAb;;AAEA,YAAKR,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAPA;AAAF,OAAd;AACD,K;;4EAEuB,UAAAmB,SAAS,EAAI;AACnC,YAAKP,QAAL,CAAc;AAAEb,QAAAA,sBAAsB,EAAEoB;AAA1B,OAAd;AACD,K;;2EAEsB,YAAM;AAC3B,YAAKP,QAAL,CAAc;AAAEd,QAAAA,kBAAkB,EAAE,CAAC,MAAKY,KAAL,CAAWZ;AAAlC,OAAd;AACD,K;;yEAEoB,UAACO,EAAD,EAAKgB,KAAL,EAAe;AAClC,UAAI,MAAKX,KAAL,CAAWT,YAAf,EAA6B;AAC3B,YAAIqB,IAAI,GAAG,MAAKZ,KAAL,CAAWtB,UAAtB;AAEAkC,QAAAA,IAAI,GAAG7C,CAAC,CAAC8C,MAAF,CAASD,IAAT,EAAe,UAASE,CAAT,EAAY;AAChC,iBAAOA,CAAC,CAACN,SAAF,IAAeb,EAAtB;AACD,SAFM,CAAP;;AAIA,cAAKO,QAAL,CAAc;AACZxB,UAAAA,UAAU,EAAEkC,IADA;AAEZrB,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID,OAXD,MAWO;AACL,cAAKW,QAAL,CAAc;AACZxB,UAAAA,UAAU,+BACL,MAAKsB,KAAL,CAAWtB,UADN,IAER;AAAE8B,YAAAA,SAAS,EAAEb,EAAb;AAAiBc,YAAAA,SAAS,EAAE7C;AAA5B,WAFQ,EADE;AAKZ2B,UAAAA,YAAY,EAAE;AALF,SAAd;AAOD;AACF,K;;8DAES,YAAM;AACd,UAAIR,MAAM,GAAG,MAAKiB,KAAL,CAAWjB,MAAxB;AACA,UAAIgC,IAAI,GAAG,IAAIC,MAAM,CAACC,IAAX,CAAgB,6BAAhB,CAAX;AACAF,MAAAA,IAAI,CAACG,GAAL,CAAS;AAAEC,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,GAAG,EAAE;AAAlB,OAAT;AACArC,MAAAA,MAAM,CAACsC,GAAP,CAAWN,IAAX;;AACA,YAAKb,QAAL,CAAc;AAAEnB,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,K;;+DAEU,YAAM;AACf,UAAIA,MAAM,GAAG,MAAKiB,KAAL,CAAWjB,MAAxB;AACAiC,MAAAA,MAAM,CAACM,cAAP,CAAsB,0BAAtB,EAAkD,UAChDC,OADgD,EAEhDC,OAFgD,EAGhD;AACA,YAAIC,GAAG,GAAGT,MAAM,CAACU,IAAP,CAAYC,gBAAZ,CAA6BJ,OAA7B,EAAsCC,OAAtC,CAAV;AACAzC,QAAAA,MAAM,CAACsC,GAAP,CAAWI,GAAX,EAAgBG,SAAhB;AACD,OAND;;AAOA,YAAK1B,QAAL,CAAc;AAAEnB,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,K;;iEAEY,YAAM;AACjB,YAAKmB,QAAL,CAAc;AAAEpB,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,K;;iEAEY,YAAM;AACjB,YAAKoB,QAAL,CAAc;AAAEpB,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,K;;wEAEmB,UAAA+C,IAAI,EAAI;AAC1B,UAAM9C,MAAM,GAAG,IAAIiC,MAAM,CAACc,MAAX,CAAkBD,IAAI,CAACE,CAAvB,CAAf;;AACA,YAAK7B,QAAL,CAAc;AAAEnB,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,K;;4DAEO,YAAM;AACZ,UAAIA,MAAM,GAAG,MAAKiB,KAAL,CAAWjB,MAAxB;AACA,UAAIA,MAAM,GAAGA,MAAM,CAACiD,KAAP,EAAb;;AACA,YAAK9B,QAAL,CAAc;AAAEnB,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,K;;gEAEW,UAAA2B,GAAG,EAAI;AACjBA,MAAAA,GAAG,CAACf,EAAJ,GAAS7B,OAAO,CAAC8B,QAAR,EAAT;AACA,UAAIJ,IAAI,GAAG,MAAKQ,KAAL,CAAWR,IAAtB;AACAA,MAAAA,IAAI,CAACS,IAAL,CAAUS,GAAV;;AACA,YAAKR,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAJA;AAAF,OAAd;;AAEAY,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,K;;4EAEuB,UAACV,EAAD,EAAKsC,IAAL,EAAWC,aAAX,EAA6B;AACnD,UAAIL,IAAI,GAAGK,aAAX;AACAnE,MAAAA,CAAC,CAACuC,IAAF,CAAOuB,IAAP,EAAa;AAAElC,QAAAA,EAAE,EAAEA;AAAN,OAAb,EAAyBwC,OAAzB,GAAmCF,IAAnC;;AACA,YAAK/B,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAEqC;AAAR,OAAd;AACD,K;;yEAEoB,UAAAO,IAAI,EAAI;AAC3B,UAAIA,IAAI,GAAGC,IAAI,CAACD,IAAD,CAAf;AACA,UAAIF,aAAa,GAAG,MAAKlC,KAAzB;AACAoC,MAAAA,IAAI,GAAGE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AACAhC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAEA,UAAI+B,IAAI,CAAC5C,IAAL,CAAUgD,MAAV,GAAmB,CAAvB,EAA0B;AACxBN,QAAAA,aAAa,CAACxD,UAAd,GAA2B,CACzB;AACE8B,UAAAA,SAAS,EAAE,MADb;AAEEC,UAAAA,SAAS,EAAE5C;AAFb,SADyB,CAA3B;AAMD;;AACDqE,MAAAA,aAAa,CAAC1C,IAAd,GAAqBzB,CAAC,CAAC0E,SAAF,CAAYL,IAAI,CAAC5C,IAAjB,CAArB;AACA0C,MAAAA,aAAa,CAAC5C,OAAd,GAAwB8C,IAAI,CAAC9C,OAA7B;AAEA4C,MAAAA,aAAa,CAACvD,WAAd,GAA4ByD,IAAI,CAACzD,WAAjC;AACAuD,MAAAA,aAAa,CAAC3C,YAAd,GAA6B,KAA7B;AACA2C,MAAAA,aAAa,CAACtD,WAAd,GAA4B,IAA5B;;AACA,YAAKsB,QAAL,mBAAmBgC,aAAnB;AACD,K;;8DAES,YAAM;AACd,YAAKhC,QAAL,CAAc;AACZxB,QAAAA,UAAU,EAAE,EADA;AAEZE,QAAAA,WAAW,EAAE,IAFD;AAGZC,QAAAA,QAAQ,EAAE,IAHE;AAIZC,QAAAA,UAAU,EAAE,KAJA;AAKZC,QAAAA,MAAM,EAAE,IALI;AAMZC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE;AAAEC,YAAAA,MAAM,EAAE,CAAV;AAAaC,YAAAA,KAAK,EAAE;AAApB;AADA,SANI;AASZC,QAAAA,kBAAkB,EAAE,KATR;AAUZC,QAAAA,sBAAsB,EAAE,EAVZ;AAWZC,QAAAA,OAAO,EAAE,EAXG;AAYZC,QAAAA,YAAY,EAAE,KAZF;AAaZC,QAAAA,IAAI,EAAE;AAbM,OAAd;AAeD,K;;gEAEW,UAAAkD,GAAG,EAAI;AACjB,YAAKC,OAAL;;AACA,YAAKzC,QAAL,CAAc;AACZtB,QAAAA,WAAW,EAAE,IADD;AAEZD,QAAAA,WAAW,EAAEP,UAAU,GAAG,sBAAb,GAAsCsE;AAFvC,OAAd;AAID,K;;;;;;EA7MkBhF,S;;AAgNrB,SAASe,MAAT","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Container, Subscribe } from \"unstated\";\nimport PinOverlay from \"./PinOverlay\";\nimport ShowPins from \"./ShowPins\";\nimport shortId from \"shortid\";\nimport _ from \"lodash\";\nimport { frontend, prodFrontend } from \"../../config\";\nimport { endpoint, prodEndPoint } from \"../../config\";\n\nconst backendUrl =\n  process.env.NODE_ENV === \"development\" ? endpoint : prodEndPoint;\nvar frontendUrl =\n  process.env.NODE_ENV === \"development\" ? frontend : prodFrontend;\n\nclass Global extends Container {\n  state = {\n    overIframe: [],\n    urlSelected: backendUrl + \"/api/screenshot?url=http://bugherd.com\",\n    pageLoading: true,\n    showPins: true,\n    showCanvas: false,\n    canvas: null,\n    iframe: {\n      size: { height: 0, width: 200 }\n    },\n    showToolbarOverlay: false,\n    toolbarOverlayContents: \"\",\n    toolbar: [],\n    isPlacingPin: false,\n    pins: []\n  };\n\n  addSimpleTextBlock = () => {\n    // 1. Make the overlay disappear.\n    this.toggleToolbarOverlay();\n\n    // 2. Build our simple text block.\n    var simpleText = {\n      id: shortId.generate(),\n      type: \"text\",\n      value: \"test\",\n      label: \"test\"\n    };\n\n    // 3. Add it to our toolbar.\n    var toolbar = this.state.toolbar;\n    toolbar.push(simpleText);\n\n    this.setState({ toolbar });\n  };\n\n  updateTextBlock = textBlock => {\n    let { value, label, id } = textBlock;\n    console.log(value, label, id);\n    let simpleText = this.state.toolbar.find(x => x.id === id);\n\n    console.log(simpleText);\n    simpleText.value = value;\n    simpleText.label = label;\n\n    this.setState({ toolbar: [...this.state.toolbar, simpleText] });\n  };\n\n  addPinBlock = () => {\n    this.toggleToolbarOverlay();\n\n    this.setState({\n      overIframe: [\n        ...this.state.overIframe,\n        { belongsTo: \"test\", component: ShowPins }\n      ]\n    });\n\n    var pin = {\n      id: shortId.generate(),\n      type: \"pin\"\n    };\n\n    //place pin view over iframe\n\n    var toolbar = this.state.toolbar;\n\n    toolbar.push(pin);\n\n    this.setState({ toolbar });\n  };\n\n  putComponentInToolbar = component => {\n    this.setState({ toolbarOverlayContents: component });\n  };\n\n  toggleToolbarOverlay = () => {\n    this.setState({ showToolbarOverlay: !this.state.showToolbarOverlay });\n  };\n\n  togglePinPlacement = (id, block) => {\n    if (this.state.isPlacingPin) {\n      var stat = this.state.overIframe;\n\n      stat = _.filter(stat, function(i) {\n        return i.belongsTo != id;\n      });\n\n      this.setState({\n        overIframe: stat,\n        isPlacingPin: false\n      });\n    } else {\n      this.setState({\n        overIframe: [\n          ...this.state.overIframe,\n          { belongsTo: id, component: PinOverlay }\n        ],\n        isPlacingPin: true\n      });\n    }\n  };\n\n  addPath = () => {\n    var canvas = this.state.canvas;\n    var path = new fabric.Path(\"M 0 0 L 200 100 L 170 200 z\");\n    path.set({ left: 120, top: 120 });\n    canvas.add(path);\n    this.setState({ canvas });\n  };\n\n  addArrow = () => {\n    var canvas = this.state.canvas;\n    fabric.loadSVGFromURL(\"/static/images/arrow.svg\", function(\n      objects,\n      options\n    ) {\n      var obj = fabric.util.groupSVGElements(objects, options);\n      canvas.add(obj).renderAll();\n    });\n    this.setState({ canvas });\n  };\n\n  showCanvas = () => {\n    this.setState({ showCanvas: true });\n  };\n\n  hideCanvas = () => {\n    this.setState({ showCanvas: false });\n  };\n\n  instantiateCanvas = that => {\n    const canvas = new fabric.Canvas(that.c);\n    this.setState({ canvas });\n  };\n\n  clear = () => {\n    var canvas = this.state.canvas;\n    var canvas = canvas.clear();\n    this.setState({ canvas });\n  };\n\n  _placePin = pin => {\n    pin.id = shortId.generate();\n    var pins = this.state.pins;\n    pins.push(pin);\n    this.setState({ pins });\n\n    console.log(\"Pin placed.\");\n  };\n\n  _updatePinCommentByID = (id, text, previousState) => {\n    var that = previousState;\n    _.find(that, { id: id }).comment = text;\n    this.setState({ pins: that });\n  };\n\n  _loadStateFromHash = hash => {\n    var hash = atob(hash);\n    var previousState = this.state;\n    hash = JSON.parse(hash);\n    console.log(\"Hash loaded.\");\n\n    if (hash.pins.length > 0) {\n      previousState.overIframe = [\n        {\n          belongsTo: \"test\",\n          component: ShowPins\n        }\n      ];\n    }\n    previousState.pins = _.cloneDeep(hash.pins);\n    previousState.toolbar = hash.toolbar;\n\n    previousState.urlSelected = hash.urlSelected;\n    previousState.isPlacingPin = false;\n    previousState.pageLoading = true;\n    this.setState({ ...previousState });\n  };\n\n  resetUI = () => {\n    this.setState({\n      overIframe: [],\n      pageLoading: true,\n      showPins: true,\n      showCanvas: false,\n      canvas: null,\n      iframe: {\n        size: { height: 0, width: 200 }\n      },\n      showToolbarOverlay: false,\n      toolbarOverlayContents: \"\",\n      toolbar: [],\n      isPlacingPin: false,\n      pins: []\n    });\n  };\n\n  fetchPage = url => {\n    this.resetUI();\n    this.setState({\n      pageLoading: true,\n      urlSelected: backendUrl + \"/api/screenshot?url=\" + url\n    });\n  };\n}\n\nexport { Global };\n"]},"metadata":{},"sourceType":"module"}