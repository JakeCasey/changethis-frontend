{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/PinBlock.js\";\nimport withContainers from '../wrappers/withContainer';\nimport { Global as globalState } from './Global';\nimport React, { Component } from 'react';\nimport SickButton from '../styles/SickButton';\n\nclass PinBlock extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n  }\n\n  render() {\n    var block = this.props.block;\n    return React.createElement(React.Fragment, null, this.props.test && this.props.test.state.pins.map((p, index) => {\n      if (p.belongsTo == this.props.block.id) {\n        return React.createElement(\"p\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, p.comment);\n      }\n    }), React.createElement(SickButton, {\n      onClick: () => this.props.test.togglePinPlacement(this.props.block.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.props.test && this.props.test.state.isPlacingPin ? 'Stop Placing Pins' : 'Place Pin'));\n  }\n\n}\n\nexport default withContainers([globalState])(PinBlock);","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/PinBlock.js"],"names":["withContainers","Global","globalState","React","Component","SickButton","PinBlock","render","block","props","test","state","pins","map","p","index","belongsTo","id","comment","togglePinPlacement","isPlacingPin"],"mappings":";;AAAA,OAAOA,cAAP,MAA2B,2BAA3B;AAEA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,UAAtC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,mCACvB,EADuB;AAAA;;AAG/BG,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;AACA,WACE,0CACG,KAAKC,KAAL,CAAWC,IAAX,IACC,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,GAA3B,CAA+B,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC3C,UAAID,CAAC,CAACE,SAAF,IAAe,KAAKP,KAAL,CAAWD,KAAX,CAAiBS,EAApC,EAAwC;AACtC,eAAO;AAAG,UAAA,GAAG,EAAEF,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgBD,CAAC,CAACI,OAAlB,CAAP;AACD;AACF,KAJD,CAFJ,EAOE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAE,MACP,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,kBAAhB,CAAmC,KAAKV,KAAL,CAAWD,KAAX,CAAiBS,EAApD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKR,KAAL,CAAWC,IAAX,IAAmB,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBS,YAAzC,GACG,mBADH,GAEG,WAPN,CAPF,CADF;AAmBD;;AAxB8B;;AA2BjC,eAAepB,cAAc,CAAC,CAACE,WAAD,CAAD,CAAd,CAA8BI,QAA9B,CAAf","sourcesContent":["import withContainers from '../wrappers/withContainer';\n\nimport { Global as globalState } from './Global';\nimport React, { Component } from 'react';\n\nimport SickButton from '../styles/SickButton';\n\nclass PinBlock extends Component {\n  state = {};\n\n  render() {\n    var block = this.props.block;\n    return (\n      <>\n        {this.props.test &&\n          this.props.test.state.pins.map((p, index) => {\n            if (p.belongsTo == this.props.block.id) {\n              return <p key={index}>{p.comment}</p>;\n            }\n          })}\n        <SickButton\n          onClick={() =>\n            this.props.test.togglePinPlacement(this.props.block.id)\n          }\n        >\n          {this.props.test && this.props.test.state.isPlacingPin\n            ? 'Stop Placing Pins'\n            : 'Place Pin'}\n        </SickButton>\n      </>\n    );\n  }\n}\n\nexport default withContainers([globalState])(PinBlock);\n"]},"metadata":{},"sourceType":"module"}