{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Global as globalState } from './Global';\nimport { Subscribe } from 'unstated';\nimport _ from 'lodash';\nimport styled from 'styled-components';\nimport { Provider } from 'unstated';\nvar Commentarea = styled.textarea.withConfig({\n  displayName: \"Comment__Commentarea\",\n  componentId: \"dimpc7-0\"\n})([\"width:100%;height:100%;\"]);\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comment, _Component);\n\n  function Comment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_getPlaceholder\", function () {\n      var placeholders = ['This needs more SPARKLE.', 'Can I get this in comic-sans?', 'I like everything about how this looks, except for how it looks.', 'How can we “spice” this page up?', 'Why don’t we add a few more colors into the mix?', 'This shit is gonna go viral', 'How about we just “spruce” this up a bit?'];\n      return _.sample(placeholders); // return 'test';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateComment\", function (Global, e) {\n      var previousState = Global.state.pins;\n      console.log(_this.props.pin.id);\n      console.log(e.target.value);\n      console.log(previousState);\n\n      Global._updatePinCommentByID(_this.props.pin.id, e.target.value, previousState);\n    });\n\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Commentarea, {\n        value: this.props.pin.comment,\n        onChange: function onChange(e) {\n          return _this2._updateComment(_this2.props.globalState, e);\n        },\n        placeholder: this._getPlaceholder()\n      });\n    }\n  }]);\n\n  return Comment;\n}(Component);\n\nexport default Comment;","map":null,"metadata":{},"sourceType":"module"}