{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport { Subscribe } from 'unstated';\nimport React, { Fragment } from 'react';\n\nfunction withContainers(Containers) {\n  return function (Component) {\n    return (\n      /*#__PURE__*/\n      function (_React$Component) {\n        _inherits(ComponentWithContainer, _React$Component);\n\n        function ComponentWithContainer() {\n          _classCallCheck(this, ComponentWithContainer);\n\n          return _possibleConstructorReturn(this, _getPrototypeOf(ComponentWithContainer).apply(this, arguments));\n        }\n\n        _createClass(ComponentWithContainer, [{\n          key: \"render\",\n          value: function render() {\n            var _this = this;\n\n            return React.createElement(Subscribe, {\n              to: Containers\n            }, function () {\n              var containerObject = {};\n\n              for (var _len = arguments.length, containers = new Array(_len), _key = 0; _key < _len; _key++) {\n                containers[_key] = arguments[_key];\n              }\n\n              _Object$values(containers).forEach(function (container) {\n                var key = container.key;\n\n                if (!key) {\n                  key = container.constructor.name;\n                }\n\n                containerObject[key] = container; // containerObject[key] = 'test';\n              });\n\n              return React.createElement(Component, _extends({}, containerObject, _this.props));\n            });\n          }\n        }]);\n\n        return ComponentWithContainer;\n      }(React.Component)\n    );\n  };\n}\n\nexport default withContainers;","map":null,"metadata":{},"sourceType":"module"}