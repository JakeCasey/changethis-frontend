{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport React, { Component } from 'react';\nimport { Subscribe } from 'unstated';\nimport { Global as globalState } from './Global';\nimport styled from 'styled-components';\nimport { Tooltip } from 'react-tippy';\nimport TooltipWrapper from './TooltipWrapper';\nimport Comment from './Comment';\nconst PinDiv = styled.div.withConfig({\n  displayName: \"Pin__PinDiv\",\n  componentId: \"sc-1edaed1-0\"\n})([\"width:\", \";height:\", \";background-color:lightskyblue;position:absolute;top:\", \";left:\", \";transform:translateX(\", \") translateY(\", \");pointer-events:auto;\"], props => props.width + 'px', props => props.height + 'px', props => props.pin.y + _parseInt(props.pin.scrollPosition.y) + 'px', props => props.pin.x + 'px', props => -props.width / 2 + 'px', props => -props.height / 2 + 'px');\nconst Pop = styled.div.withConfig({\n  displayName: \"Pin__Pop\",\n  componentId: \"sc-1edaed1-1\"\n})([\"width:300px;background:blue;\"]);\n\nclass Pin extends Component {\n  render() {\n    return React.createElement(PinDiv, {\n      key: this.props.key,\n      width: 25,\n      height: 25,\n      pin: this.props.pin\n    }, React.createElement(Tooltip, {\n      trigger: \"click\",\n      interactive: true,\n      html: React.createElement(TooltipWrapper, null, React.createElement(Comment, {\n        pin: this.props.pin,\n        global: this.props.globalState\n      }))\n    }, React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    })));\n  }\n\n}\n\nexport default Pin;","map":null,"metadata":{},"sourceType":"module"}