{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/PinBlock.js\";\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\nimport React, { Component } from \"react\";\nimport SickButton from \"../styles/SickButton\";\n\nvar PinBlock =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PinBlock, _Component);\n\n  function PinBlock() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PinBlock);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PinBlock)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    return _this;\n  }\n\n  _createClass(PinBlock, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var block = this.props.block;\n      return React.createElement(\"div\", {\n        className: \"toolbar_card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex mb-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        className: \"w-10 h-10 mr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"path\", {\n        className: \"fill-current text-gray-300\",\n        d: \"M6 2h6v6c0 1.1.9 2 2 2h6v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4c0-1.1.9-2 2-2z\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"path\", {\n        className: \"fill-current text-gray-500\",\n        d: \"M13 15h2a1 1 0 0 1 0 2h-2v2a1 1 0 0 1-2 0v-2H9a1 1 0 0 1 0-2h2v-2a1 1 0 0 1 2 0v2z\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"polygon\", {\n        \"class\": \"secondary\",\n        points: \"14 2 20 8 14 8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"toolbar_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Pin\"), this.props.test && this.props.test.state.pins.map(function (p, index) {\n        if (p.belongsTo == _this2.props.block.id) {\n          return React.createElement(\"p\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, p.comment);\n        }\n      }), React.createElement(SickButton, {\n        onClick: function onClick() {\n          return _this2.props.test.togglePinPlacement(_this2.props.block.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.test && this.props.test.state.isPlacingPin ? \"Stop Placing Pins\" : \"Place Pin\")));\n    }\n  }]);\n\n  return PinBlock;\n}(Component);\n\nexport default withContainers([globalState])(PinBlock);","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/PinBlock.js"],"names":["withContainers","Global","globalState","React","Component","SickButton","PinBlock","block","props","test","state","pins","map","p","index","belongsTo","id","comment","togglePinPlacement","isPlacingPin"],"mappings":";;;;;;;;AAAA,OAAOA,cAAP,MAA2B,2BAA3B;AAEA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,UAAtC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;;IAEMC,Q;;;;;;;;;;;;;;;;;;4DACI,E;;;;;;;6BAEC;AAAA;;AACP,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAC,4BADR;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AACE,QAAA,SAAS,EAAC,4BADZ;AAEE,QAAA,CAAC,EAAC,4EAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EASE;AACE,QAAA,SAAS,EAAC,4BADZ;AAEE,QAAA,CAAC,EAAC,oFAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAaE;AAAS,iBAAM,WAAf;AAA2B,QAAA,MAAM,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CADF,EAgBE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBF,EAiBG,KAAKC,KAAL,CAAWC,IAAX,IACC,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,GAA3B,CAA+B,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAC3C,YAAID,CAAC,CAACE,SAAF,IAAe,MAAI,CAACP,KAAL,CAAWD,KAAX,CAAiBS,EAApC,EAAwC;AACtC,iBAAO;AAAG,YAAA,GAAG,EAAEF,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgBD,CAAC,CAACI,OAAlB,CAAP;AACD;AACF,OAJD,CAlBJ,EAuBE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACT,KAAL,CAAWC,IAAX,CAAgBS,kBAAhB,CAAmC,MAAI,CAACV,KAAL,CAAWD,KAAX,CAAiBS,EAApD,CADO;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,KAAKR,KAAL,CAAWC,IAAX,IAAmB,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBS,YAAzC,GACG,mBADH,GAEG,WAPN,CAvBF,CADF,CADF;AAqCD;;;;EA1CoBf,S;;AA6CvB,eAAeJ,cAAc,CAAC,CAACE,WAAD,CAAD,CAAd,CAA8BI,QAA9B,CAAf","sourcesContent":["import withContainers from \"../wrappers/withContainer\";\n\nimport { Global as globalState } from \"./Global\";\nimport React, { Component } from \"react\";\n\nimport SickButton from \"../styles/SickButton\";\n\nclass PinBlock extends Component {\n  state = {};\n\n  render() {\n    var block = this.props.block;\n    return (\n      <div className=\"toolbar_card\">\n        <div className=\"flex mb-8\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            className=\"w-10 h-10 mr-4\"\n          >\n            <path\n              className=\"fill-current text-gray-300\"\n              d=\"M6 2h6v6c0 1.1.9 2 2 2h6v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4c0-1.1.9-2 2-2z\"\n            />\n            <path\n              className=\"fill-current text-gray-500\"\n              d=\"M13 15h2a1 1 0 0 1 0 2h-2v2a1 1 0 0 1-2 0v-2H9a1 1 0 0 1 0-2h2v-2a1 1 0 0 1 2 0v2z\"\n            />\n            <polygon class=\"secondary\" points=\"14 2 20 8 14 8\" />\n          </svg>\n          <p className=\"toolbar_header\">Pin</p>\n          {this.props.test &&\n            this.props.test.state.pins.map((p, index) => {\n              if (p.belongsTo == this.props.block.id) {\n                return <p key={index}>{p.comment}</p>;\n              }\n            })}\n          <SickButton\n            onClick={() =>\n              this.props.test.togglePinPlacement(this.props.block.id)\n            }\n          >\n            {this.props.test && this.props.test.state.isPlacingPin\n              ? \"Stop Placing Pins\"\n              : \"Place Pin\"}\n          </SickButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withContainers([globalState])(PinBlock);\n"]},"metadata":{},"sourceType":"module"}