{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/Reporting.js\";\nimport Error from \"../ErrorMessage\";\nimport React, { Component } from \"react\";\nimport { useRouter } from \"next/router\";\nimport gql from \"graphql-tag\";\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\nimport SickButton from \"../styles/SickButton\";\nimport styled from \"styled-components\";\nimport DesignCanvas from \"./DesignCanvas\";\nimport Toolbar from \"./Toolbar.js\";\nimport { Url } from \"url\";\nimport { frontend, prodFrontend } from \"../../config\";\nconst Frame = styled.iframe.withConfig({\n  displayName: \"Reporting__Frame\",\n  componentId: \"sc-5smu6h-0\"\n})([\"position:absolute;top:0px;left:0px;right:0px;bottom:0px;width:100%;height:100%;max-width:\", \";\"], props => props.width);\nconst WorkArea = styled.div.withConfig({\n  displayName: \"Reporting__WorkArea\",\n  componentId: \"sc-5smu6h-1\"\n})([\"display:flex;margin-bottom:30px;\"]);\nconst UrlBar = styled.div.withConfig({\n  displayName: \"Reporting__UrlBar\",\n  componentId: \"sc-5smu6h-2\"\n})([\"display:flex;\"]);\nconst URL = styled.input.withConfig({\n  displayName: \"Reporting__URL\",\n  componentId: \"sc-5smu6h-3\"\n})([\"width:100%;\"]);\nconst CanvasContainer = styled.div.withConfig({\n  displayName: \"Reporting__CanvasContainer\",\n  componentId: \"sc-5smu6h-4\"\n})([\"position:relative;width:100%;height:100%;min-height:1000px;min-width:1000px;overflow-y:hidden;\"]);\n\nconst Test = props => {\n  var router = useRouter();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Test\"), _JSON$stringify(router.query), props.children);\n};\n\nconst frontendUrl = process.env.NODE_ENV === \"development\" ? frontend : prodFrontend;\n\nclass Reporting extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      url: \"http://bugherd.com\",\n      urlSelected: frontendUrl + \"/api/proxy?url=aHR0cDovL3d3dy5nb29nbGUuY29t\"\n    });\n\n    _defineProperty(this, \"reloadIframe\", () => {\n      var urlString = frontendUrl + \"/api/proxy?url=\" + btoa(this.state.url);\n      this.props.test.setCurrentIframe(urlString);\n      this.setState({\n        urlSelected: urlString\n      });\n    });\n\n    _defineProperty(this, \"updateUrl\", e => {\n      var url = e.target.value;\n      this.setState({\n        url\n      });\n    });\n\n    _defineProperty(this, \"handleKeyDown\", e => {\n      if (e.key === \"Enter\") {\n        this.reloadIframe();\n      }\n    });\n\n    _defineProperty(this, \"handleScroll\", e => {});\n  }\n\n  render() {\n    // if (!this.props.test) return <p>Loading...</p>;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(UrlBar, {\n      className: \"mb-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(URL, {\n      className: \"bg-gray-100 px-8 mr-8 rounded\",\n      value: this.state.url,\n      onChange: e => {\n        this.updateUrl(e);\n      },\n      onKeyDown: e => this.handleKeyDown(e),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \" text-green-700 mr-4 rounded \",\n      onClick: () => {\n        this.reloadIframe();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      className: \"icon-arrow-thick-right-circle w-10 h-10\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"circle\", {\n      cx: \"12\",\n      cy: \"12\",\n      r: \"10\",\n      className: \"fill-current text-green-300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      d: \"M12 14H7a1 1 0 01-1-1v-2a1 1 0 011-1h5V8a1 1 0 011.7-.7l4 4a1 1 0 010 1.4l-4 4A1 1 0 0112 16v-2z\",\n      className: \"text-green-500 fill-current\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })))), React.createElement(WorkArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(CanvasContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.props.test && this.props.test.state.overIframe.map((OverIframe, i) => {\n      var OverIframeComponent = OverIframe.component;\n      return React.createElement(OverIframeComponent, {\n        key: i,\n        id: OverIframe.belongsTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      });\n    }), \" \", this.props.test && this.props.test.state && React.createElement(\"img\", {\n      src: frontendUrl + \"/api/screenshot?url=\" + this.props.test.state.currentIframe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withContainers([globalState])(Reporting);","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/Reporting.js"],"names":["Error","React","Component","useRouter","gql","withContainers","Global","globalState","SickButton","styled","DesignCanvas","Toolbar","Url","frontend","prodFrontend","Frame","iframe","props","width","WorkArea","div","UrlBar","URL","input","CanvasContainer","Test","router","query","children","frontendUrl","process","env","NODE_ENV","Reporting","url","urlSelected","urlString","btoa","state","test","setCurrentIframe","setState","e","target","value","key","reloadIframe","render","updateUrl","handleKeyDown","overIframe","map","OverIframe","i","OverIframeComponent","component","belongsTo","currentIframe"],"mappings":"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","sourcesContent":["import Error from \"../ErrorMessage\";\nimport React, { Component } from \"react\";\nimport { useRouter } from \"next/router\";\nimport gql from \"graphql-tag\";\n\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\n\nimport SickButton from \"../styles/SickButton\";\nimport styled from \"styled-components\";\nimport DesignCanvas from \"./DesignCanvas\";\nimport Toolbar from \"./Toolbar.js\";\nimport { Url } from \"url\";\nimport { frontend, prodFrontend } from \"../../config\";\n\nconst Frame = styled.iframe`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  width: 100%;\n  height: 100%;\n  max-width: ${props => props.width};\n`;\n\nconst WorkArea = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n`;\n\nconst UrlBar = styled.div`\n  display: flex;\n`;\n\nconst URL = styled.input`\n  width: 100%;\n`;\nconst CanvasContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-height: 1000px;\n  min-width: 1000px;\n  overflow-y: hidden;\n`;\n\nconst Test = props => {\n  var router = useRouter();\n\n  return (\n    <div>\n      <p>Test</p>\n      {JSON.stringify(router.query)}\n      {props.children}\n    </div>\n  );\n};\n\nconst frontendUrl =\n  process.env.NODE_ENV === \"development\" ? frontend : prodFrontend;\n\nclass Reporting extends Component {\n  state = {\n    url: \"http://bugherd.com\",\n    urlSelected: frontendUrl + \"/api/proxy?url=aHR0cDovL3d3dy5nb29nbGUuY29t\"\n  };\n\n  reloadIframe = () => {\n    var urlString = frontendUrl + \"/api/proxy?url=\" + btoa(this.state.url);\n    this.props.test.setCurrentIframe(urlString);\n\n    this.setState({ urlSelected: urlString });\n  };\n\n  updateUrl = e => {\n    var url = e.target.value;\n    this.setState({ url });\n  };\n\n  handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      this.reloadIframe();\n    }\n  };\n\n  handleScroll = e => {};\n\n  render() {\n    // if (!this.props.test) return <p>Loading...</p>;\n    return (\n      <div>\n        <UrlBar className=\"mb-8\">\n          <URL\n            className=\"bg-gray-100 px-8 mr-8 rounded\"\n            value={this.state.url}\n            onChange={e => {\n              this.updateUrl(e);\n            }}\n            onKeyDown={e => this.handleKeyDown(e)}\n            type=\"text\"\n          />\n          <button\n            className=\" text-green-700 mr-4 rounded \"\n            onClick={() => {\n              this.reloadIframe();\n            }}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"icon-arrow-thick-right-circle w-10 h-10\"\n              viewBox=\"0 0 24 24\"\n            >\n              <circle\n                cx=\"12\"\n                cy=\"12\"\n                r=\"10\"\n                className=\"fill-current text-green-300\"\n              ></circle>\n              <path\n                d=\"M12 14H7a1 1 0 01-1-1v-2a1 1 0 011-1h5V8a1 1 0 011.7-.7l4 4a1 1 0 010 1.4l-4 4A1 1 0 0112 16v-2z\"\n                className=\"text-green-500 fill-current\"\n              ></path>\n            </svg>\n          </button>\n        </UrlBar>\n        <WorkArea>\n          <CanvasContainer>\n            {this.props.test &&\n              this.props.test.state.overIframe.map((OverIframe, i) => {\n                var OverIframeComponent = OverIframe.component;\n                return (\n                  <OverIframeComponent key={i} id={OverIframe.belongsTo} />\n                );\n              })}{\" \"}\n            {this.props.test && this.props.test.state && (\n              <img\n                src={\n                  frontendUrl +\n                  \"/api/screenshot?url=\" +\n                  this.props.test.state.currentIframe\n                }\n              />\n            )}\n            {/* <DesignCanvas /> */}\n          </CanvasContainer>\n          <Toolbar />\n        </WorkArea>\n      </div>\n    );\n  }\n}\n\nexport default withContainers([globalState])(Reporting);\n"]},"metadata":{},"sourceType":"module"}