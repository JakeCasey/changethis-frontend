{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/wrappers/withContainer.js\";\nimport { Subscribe } from 'unstated';\nimport React, { Fragment } from 'react';\n\nfunction withContainers(Containers) {\n  return function (Component) {\n    return (\n      /*#__PURE__*/\n      function (_React$Component) {\n        _inherits(ComponentWithContainer, _React$Component);\n\n        function ComponentWithContainer() {\n          _classCallCheck(this, ComponentWithContainer);\n\n          return _possibleConstructorReturn(this, _getPrototypeOf(ComponentWithContainer).apply(this, arguments));\n        }\n\n        _createClass(ComponentWithContainer, [{\n          key: \"render\",\n          value: function render() {\n            var _this = this;\n\n            return React.createElement(Subscribe, {\n              to: Containers,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 9\n              },\n              __self: this\n            }, function () {\n              var containerObject = {};\n\n              for (var _len = arguments.length, containers = new Array(_len), _key = 0; _key < _len; _key++) {\n                containers[_key] = arguments[_key];\n              }\n\n              _Object$values(containers).forEach(function (container) {\n                var key = container.key;\n\n                if (!key) {\n                  key = container.constructor.name;\n                }\n\n                containerObject[key] = container; // containerObject[key] = 'test';\n              });\n\n              return React.createElement(Component, _extends({}, containerObject, _this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 20\n                },\n                __self: this\n              }));\n            });\n          }\n        }]);\n\n        return ComponentWithContainer;\n      }(React.Component)\n    );\n  };\n}\n\nexport default withContainers;","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/wrappers/withContainer.js"],"names":["Subscribe","React","Fragment","withContainers","Containers","Component","containerObject","containers","forEach","container","key","constructor","name","props"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,cAAT,CAAwBC,UAAxB,EAAoC;AAClC,SAAO,UAASC,SAAT,EAAoB;AACzB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,mCACW;AAAA;;AACP,mBACE,oBAAC,SAAD;AAAW,cAAA,EAAE,EAAED,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACG,YAAmB;AAClB,kBAAME,eAAe,GAAG,EAAxB;;AADkB,gDAAfC,UAAe;AAAfA,gBAAAA,UAAe;AAAA;;AAElB,6BAAcA,UAAd,EAA0BC,OAA1B,CAAkC,UAAAC,SAAS,EAAI;AAC7C,oBAAIC,GAAG,GAAGD,SAAS,CAACC,GAApB;;AACA,oBAAI,CAACA,GAAL,EAAU;AACRA,kBAAAA,GAAG,GAAGD,SAAS,CAACE,WAAV,CAAsBC,IAA5B;AACD;;AACDN,gBAAAA,eAAe,CAACI,GAAD,CAAf,GAAuBD,SAAvB,CAL6C,CAM7C;AACD,eAPD;;AAQA,qBAAO,oBAAC,SAAD,eAAeH,eAAf,EAAoC,KAAI,CAACO,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,aAZH,CADF;AAgBD;AAlBH;;AAAA;AAAA,QAA4CZ,KAAK,CAACI,SAAlD;AAAA;AAoBD,GArBD;AAsBD;;AAED,eAAeF,cAAf","sourcesContent":["import { Subscribe } from 'unstated';\nimport React, { Fragment } from 'react';\n\nfunction withContainers(Containers) {\n  return function(Component) {\n    return class ComponentWithContainer extends React.Component {\n      render() {\n        return (\n          <Subscribe to={Containers}>\n            {(...containers) => {\n              const containerObject = {};\n              Object.values(containers).forEach(container => {\n                let key = container.key;\n                if (!key) {\n                  key = container.constructor.name;\n                }\n                containerObject[key] = container;\n                // containerObject[key] = 'test';\n              });\n              return <Component {...containerObject} {...this.props} />;\n            }}\n          </Subscribe>\n        );\n      }\n    };\n  };\n}\n\nexport default withContainers;\n"]},"metadata":{},"sourceType":"module"}