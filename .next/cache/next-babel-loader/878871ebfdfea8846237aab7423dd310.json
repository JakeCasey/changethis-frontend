{"ast":null,"code":"var waitForIframeScrollPosition = function waitForIframeScrollPosition(document, callback) {\n  var element = document.getElementById(\"iframe\").contentWindow.document.getElementById(\"iframeScrollPosition\");\n\n  if (typeof element === \"undefined\" || element === null) {\n    var interval = setInterval(function () {\n      console.log(\"interval hit\"); //get element again\n\n      try {\n        element = document.getElementById(\"iframe\").contentWindow.document.getElementById(\"iframeScrollPosition\");\n      } catch (error) {\n        if (error) console.log(error);\n      } //check if it exists yet.\n\n\n      if (typeof element !== \"undefined\" && typeof element !== \"null\") {\n        //if it does kill the interval and run callback\n        clearInterval(interval);\n        console.log(\"Interval cleared\");\n        callback();\n      } //if it doesn't keep checking.\n\n    }, 500);\n  } else {\n    callback();\n  }\n};\n\nexport { waitForIframeScrollPosition };","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/lib/helpers.js"],"names":["waitForIframeScrollPosition","document","callback","element","getElementById","contentWindow","interval","setInterval","console","log","error","clearInterval"],"mappings":"AAAA,IAAMA,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,QAAD,EAAWC,QAAX,EAAwB;AAC1D,MAAIC,OAAO,GAAGF,QAAQ,CACnBG,cADW,CACI,QADJ,EAEXC,aAFW,CAEGJ,QAFH,CAEYG,cAFZ,CAE2B,sBAF3B,CAAd;;AAIA,MAAI,OAAOD,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,KAAK,IAAlD,EAAwD;AACtD,QAAIG,QAAQ,GAAGC,WAAW,CAAC,YAAM;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAD+B,CAE/B;;AACA,UAAI;AACFN,QAAAA,OAAO,GAAGF,QAAQ,CACfG,cADO,CACQ,QADR,EAEPC,aAFO,CAEOJ,QAFP,CAEgBG,cAFhB,CAE+B,sBAF/B,CAAV;AAGD,OAJD,CAIE,OAAOM,KAAP,EAAc;AACd,YAAIA,KAAJ,EAAWF,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACZ,OAT8B,CAU/B;;;AACA,UAAI,OAAOP,OAAP,KAAmB,WAAnB,IAAkC,OAAOA,OAAP,KAAmB,MAAzD,EAAiE;AAC/D;AACAQ,QAAAA,aAAa,CAACL,QAAD,CAAb;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAP,QAAAA,QAAQ;AACT,OAhB8B,CAiB/B;;AACD,KAlByB,EAkBvB,GAlBuB,CAA1B;AAmBD,GApBD,MAoBO;AACLA,IAAAA,QAAQ;AACT;AACF,CA5BD;;AA6BA,SAASF,2BAAT","sourcesContent":["const waitForIframeScrollPosition = (document, callback) => {\n  let element = document\n    .getElementById(\"iframe\")\n    .contentWindow.document.getElementById(\"iframeScrollPosition\");\n\n  if (typeof element === \"undefined\" || element === null) {\n    let interval = setInterval(() => {\n      console.log(\"interval hit\");\n      //get element again\n      try {\n        element = document\n          .getElementById(\"iframe\")\n          .contentWindow.document.getElementById(\"iframeScrollPosition\");\n      } catch (error) {\n        if (error) console.log(error);\n      }\n      //check if it exists yet.\n      if (typeof element !== \"undefined\" && typeof element !== \"null\") {\n        //if it does kill the interval and run callback\n        clearInterval(interval);\n        console.log(\"Interval cleared\");\n        callback();\n      }\n      //if it doesn't keep checking.\n    }, 500);\n  } else {\n    callback();\n  }\n};\nexport { waitForIframeScrollPosition };\n"]},"metadata":{},"sourceType":"module"}