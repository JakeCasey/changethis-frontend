{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/Reporting.js\";\nimport Error from '../ErrorMessage';\nimport React, { Component } from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport withContainers from '../wrappers/withContainer';\nimport { Global as globalState } from './Global';\nimport SickButton from '../styles/SickButton';\nimport styled from 'styled-components';\nimport DesignCanvas from './DesignCanvas';\nimport Toolbar from './Toolbar.js';\nimport { Url } from 'url';\nimport { frontend, prodFrontend } from '../../config';\nconst Frame = styled.iframe.withConfig({\n  displayName: \"Reporting__Frame\",\n  componentId: \"sc-5smu6h-0\"\n})([\"position:absolute;top:0px;left:0px;right:0px;bottom:0px;width:100%;height:100%;max-width:\", \";\"], props => props.width);\nconst WorkArea = styled.div.withConfig({\n  displayName: \"Reporting__WorkArea\",\n  componentId: \"sc-5smu6h-1\"\n})([\"display:flex;margin-bottom:30px;\"]);\nconst UrlBar = styled.div.withConfig({\n  displayName: \"Reporting__UrlBar\",\n  componentId: \"sc-5smu6h-2\"\n})([\"display:flex;padding:40px 0px;\"]);\nconst URL = styled.input.withConfig({\n  displayName: \"Reporting__URL\",\n  componentId: \"sc-5smu6h-3\"\n})([\"width:100%;\"]);\nconst CanvasContainer = styled.div.withConfig({\n  displayName: \"Reporting__CanvasContainer\",\n  componentId: \"sc-5smu6h-4\"\n})([\"position:relative;width:100%;height:100%;min-height:1000px;min-width:1000px;overflow-y:hidden;\"]);\n\nconst Test = props => {\n  var router = useRouter();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Test\"), _JSON$stringify(router.query), props.children);\n};\n\nconst frontendUrl = process.env.NODE_ENV === 'development' ? frontend : prodFrontend;\n\nclass Reporting extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      url: 'http://bugherd.com',\n      urlSelected: frontendUrl + '/api/proxy?url=aHR0cDovL2J1Z2hlcmQuY29t'\n    });\n\n    _defineProperty(this, \"reloadIframe\", () => {\n      var urlString = frontendUrl + '/api/proxy?url=' + btoa(this.state.url);\n      console.log(this.props); // if (this.props.globalState) {\n\n      this.props.globalStateTest.setCurrentIframe(urlString); // }\n\n      this.setState({\n        urlSelected: urlString\n      });\n    });\n\n    _defineProperty(this, \"updateUrl\", e => {\n      var url = e.target.value;\n      this.setState({\n        url\n      });\n    });\n\n    _defineProperty(this, \"handleKeyDown\", e => {\n      if (e.key === 'Enter') {\n        this.reloadIframe();\n      }\n    });\n\n    _defineProperty(this, \"handleScroll\", e => {});\n  }\n\n  render() {\n    // if (!this.props.globalStateTest) return <p>Loading...</p>;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(UrlBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(URL, {\n      value: this.state.url,\n      onChange: e => {\n        this.updateUrl(e);\n      },\n      onKeyDown: e => this.handleKeyDown(e),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(SickButton, {\n      onClick: () => {\n        this.reloadIframe();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Go\")), React.createElement(WorkArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(CanvasContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.props.globalStateTest && this.props.globalStateTest.state.overIframe.map((OverIframe, i) => {\n      var OverIframeComponent = OverIframe.component;\n      return React.createElement(OverIframeComponent, {\n        key: i,\n        id: OverIframe.belongsTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      });\n    }), ' ', this.props.globalStateTest && this.props.globalStateTest.state && React.createElement(Frame, {\n      id: \"iframe\",\n      width: this.props.globalStateTest.state.iframe.size.width,\n      src: this.props.globalStateTest.state.currentIframe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withContainers([globalTest])(Reporting);","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/Reporting.js"],"names":["Error","React","Component","useRouter","gql","withContainers","Global","globalState","SickButton","styled","DesignCanvas","Toolbar","Url","frontend","prodFrontend","Frame","iframe","props","width","WorkArea","div","UrlBar","URL","input","CanvasContainer","Test","router","query","children","frontendUrl","process","env","NODE_ENV","Reporting","url","urlSelected","urlString","btoa","state","console","log","globalStateTest","setCurrentIframe","setState","e","target","value","key","reloadIframe","render","updateUrl","handleKeyDown","overIframe","map","OverIframe","i","OverIframeComponent","component","belongsTo","size","currentIframe","globalTest"],"mappings":"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","sourcesContent":["import Error from '../ErrorMessage';\nimport React, { Component } from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\n\nimport withContainers from '../wrappers/withContainer';\nimport { Global as globalState } from './Global';\n\nimport SickButton from '../styles/SickButton';\nimport styled from 'styled-components';\nimport DesignCanvas from './DesignCanvas';\nimport Toolbar from './Toolbar.js';\nimport { Url } from 'url';\nimport { frontend, prodFrontend } from '../../config';\n\nconst Frame = styled.iframe`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  width: 100%;\n  height: 100%;\n  max-width: ${props => props.width};\n`;\n\nconst WorkArea = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n`;\n\nconst UrlBar = styled.div`\n  display: flex;\n  padding: 40px 0px;\n`;\n\nconst URL = styled.input`\n  width: 100%;\n`;\nconst CanvasContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-height: 1000px;\n  min-width: 1000px;\n  overflow-y: hidden;\n`;\n\nconst Test = props => {\n  var router = useRouter();\n\n  return (\n    <div>\n      <p>Test</p>\n      {JSON.stringify(router.query)}\n      {props.children}\n    </div>\n  );\n};\n\nconst frontendUrl =\n  process.env.NODE_ENV === 'development' ? frontend : prodFrontend;\n\nclass Reporting extends Component {\n  state = {\n    url: 'http://bugherd.com',\n    urlSelected: frontendUrl + '/api/proxy?url=aHR0cDovL2J1Z2hlcmQuY29t',\n  };\n\n  reloadIframe = () => {\n    var urlString = frontendUrl + '/api/proxy?url=' + btoa(this.state.url);\n    console.log(this.props);\n    // if (this.props.globalState) {\n    this.props.globalStateTest.setCurrentIframe(urlString);\n    // }\n\n    this.setState({ urlSelected: urlString });\n  };\n\n  updateUrl = e => {\n    var url = e.target.value;\n    this.setState({ url });\n  };\n\n  handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      this.reloadIframe();\n    }\n  };\n\n  handleScroll = e => {};\n\n  render() {\n    // if (!this.props.globalStateTest) return <p>Loading...</p>;\n    return (\n      <div>\n        <UrlBar>\n          <URL\n            value={this.state.url}\n            onChange={e => {\n              this.updateUrl(e);\n            }}\n            onKeyDown={e => this.handleKeyDown(e)}\n            type=\"text\"\n          />\n          <SickButton\n            onClick={() => {\n              this.reloadIframe();\n            }}\n          >\n            Go\n          </SickButton>\n        </UrlBar>\n        <WorkArea>\n          <CanvasContainer>\n            {this.props.globalStateTest &&\n              this.props.globalStateTest.state.overIframe.map((OverIframe, i) => {\n                var OverIframeComponent = OverIframe.component;\n                return (\n                  <OverIframeComponent key={i} id={OverIframe.belongsTo} />\n                );\n              })}{' '}\n            {this.props.globalStateTest && this.props.globalStateTest.state && (\n              <Frame\n                id=\"iframe\"\n                width={this.props.globalStateTest.state.iframe.size.width}\n                src={this.props.globalStateTest.state.currentIframe}\n              />\n            )}\n            {/* <DesignCanvas /> */}\n          </CanvasContainer>\n          <Toolbar />\n        </WorkArea>\n      </div>\n    );\n  }\n}\n\nexport default withContainers([globalTest])(Reporting);\n"]},"metadata":{},"sourceType":"module"}