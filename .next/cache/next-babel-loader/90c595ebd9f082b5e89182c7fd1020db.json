{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/PinBlock.js\";\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\nimport React, { Component } from \"react\";\nimport SickButton from \"../styles/SickButton\";\n\nclass PinBlock extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n  }\n\n  render() {\n    var block = this.props.block;\n    return React.createElement(\"div\", {\n      className: \"toolbar_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex mb-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 24 24\",\n      className: \"w-10 h-10 mr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      className: \"fill-current text-gray-300\",\n      d: \"M6 2h6v6c0 1.1.9 2 2 2h6v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4c0-1.1.9-2 2-2z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      className: \"fill-current text-gray-500\",\n      d: \"M13 15h2a1 1 0 0 1 0 2h-2v2a1 1 0 0 1-2 0v-2H9a1 1 0 0 1 0-2h2v-2a1 1 0 0 1 2 0v2z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"polygon\", {\n      class: \"secondary\",\n      points: \"14 2 20 8 14 8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"toolbar_header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Pin\"), this.props.test && this.props.test.state.pins.map((p, index) => {\n      if (p.belongsTo == this.props.block.id) {\n        return React.createElement(\"p\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, p.comment);\n      }\n    }), React.createElement(SickButton, {\n      onClick: () => this.props.test.togglePinPlacement(this.props.block.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.test && this.props.test.state.isPlacingPin ? \"Stop Placing Pins\" : \"Place Pin\")));\n  }\n\n}\n\nexport default withContainers([globalState])(PinBlock);","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/PinBlock.js"],"names":["withContainers","Global","globalState","React","Component","SickButton","PinBlock","render","block","props","test","state","pins","map","p","index","belongsTo","id","comment","togglePinPlacement","isPlacingPin"],"mappings":";;AAAA,OAAOA,cAAP,MAA2B,2BAA3B;AAEA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,UAAtC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,mCACvB,EADuB;AAAA;;AAG/BG,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAC,4BADR;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AACE,MAAA,SAAS,EAAC,4BADZ;AAEE,MAAA,CAAC,EAAC,4EAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EASE;AACE,MAAA,SAAS,EAAC,4BADZ;AAEE,MAAA,CAAC,EAAC,oFAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAaE;AAAS,MAAA,KAAK,EAAC,WAAf;AAA2B,MAAA,MAAM,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF,EAgBE;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBF,EAiBG,KAAKC,KAAL,CAAWC,IAAX,IACC,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,GAA3B,CAA+B,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC3C,UAAID,CAAC,CAACE,SAAF,IAAe,KAAKP,KAAL,CAAWD,KAAX,CAAiBS,EAApC,EAAwC;AACtC,eAAO;AAAG,UAAA,GAAG,EAAEF,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgBD,CAAC,CAACI,OAAlB,CAAP;AACD;AACF,KAJD,CAlBJ,EAuBE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAE,MACP,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,kBAAhB,CAAmC,KAAKV,KAAL,CAAWD,KAAX,CAAiBS,EAApD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKR,KAAL,CAAWC,IAAX,IAAmB,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBS,YAAzC,GACG,mBADH,GAEG,WAPN,CAvBF,CADF,CADF;AAqCD;;AA1C8B;;AA6CjC,eAAepB,cAAc,CAAC,CAACE,WAAD,CAAD,CAAd,CAA8BI,QAA9B,CAAf","sourcesContent":["import withContainers from \"../wrappers/withContainer\";\n\nimport { Global as globalState } from \"./Global\";\nimport React, { Component } from \"react\";\n\nimport SickButton from \"../styles/SickButton\";\n\nclass PinBlock extends Component {\n  state = {};\n\n  render() {\n    var block = this.props.block;\n    return (\n      <div className=\"toolbar_card\">\n        <div className=\"flex mb-8\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            className=\"w-10 h-10 mr-4\"\n          >\n            <path\n              className=\"fill-current text-gray-300\"\n              d=\"M6 2h6v6c0 1.1.9 2 2 2h6v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4c0-1.1.9-2 2-2z\"\n            />\n            <path\n              className=\"fill-current text-gray-500\"\n              d=\"M13 15h2a1 1 0 0 1 0 2h-2v2a1 1 0 0 1-2 0v-2H9a1 1 0 0 1 0-2h2v-2a1 1 0 0 1 2 0v2z\"\n            />\n            <polygon class=\"secondary\" points=\"14 2 20 8 14 8\" />\n          </svg>\n          <p className=\"toolbar_header\">Pin</p>\n          {this.props.test &&\n            this.props.test.state.pins.map((p, index) => {\n              if (p.belongsTo == this.props.block.id) {\n                return <p key={index}>{p.comment}</p>;\n              }\n            })}\n          <SickButton\n            onClick={() =>\n              this.props.test.togglePinPlacement(this.props.block.id)\n            }\n          >\n            {this.props.test && this.props.test.state.isPlacingPin\n              ? \"Stop Placing Pins\"\n              : \"Place Pin\"}\n          </SickButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withContainers([globalState])(PinBlock);\n"]},"metadata":{},"sourceType":"module"}