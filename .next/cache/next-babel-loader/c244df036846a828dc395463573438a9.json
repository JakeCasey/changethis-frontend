{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/PinOverlay.js\";\nimport withContainers from \"../wrappers/withContainer\";\nimport { Global as globalState } from \"./Global\";\nimport React, { Component } from \"react\";\nimport { Subscribe } from \"unstated\";\nimport styled from \"styled-components\";\nimport shortid from \"shortid\";\nimport SickButton from \"../styles/SickButton\";\nimport { waitForIframeScrollPosition } from \"../../lib/helpers\";\nconst PinOverlayDiv = styled.div.withConfig({\n  displayName: \"PinOverlay__PinOverlayDiv\",\n  componentId: \"sgig1q-0\"\n})([\"position:absolute;top:0px;left:0px;right:0px;bottom:0px;z-index:2;pointer-events:\", \";\"], props => props.showPointerEvents ? \"auto\" : \"none\");\n\nclass PinOverlay extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showPointerEvents: true,\n      pin: {\n        x: \"\",\n        y: \"\"\n      }\n    });\n\n    _defineProperty(this, \"_onMouseMove\", e => {\n      var rect = e.target.getBoundingClientRect();\n      var x = e.clientX - rect.left; //x position within the element.\n\n      var y = e.clientY - rect.top; //y position within the element.\n      //get scroll position;\n\n      var scroll;\n      waitForIframeScrollPosition(document, () => {\n        var iframeScrollPosition = document.getElementById(\"iframe\").contentWindow.document.getElementById(\"iframeScrollPosition\");\n\n        if (typeof iframeScrollPosition !== \"undefined\") {\n          scroll = iframeScrollPosition.getAttribute(\"y\");\n        } else {\n          scroll = \"0\";\n        } // this.setState({ pin: { ...this.state.pin, x: e.screenX, y: e.screenY } });\n\n\n        this.setState({\n          pin: _objectSpread({}, this.state.pin, {\n            x: x,\n            y: y,\n            scrollPosition: {\n              y: scroll\n            }\n          })\n        });\n      });\n    });\n\n    _defineProperty(this, \"_handlePinClick\", Global => {\n      Global._placePin(this.state.pin); // Global._placePin(this.state.pin);\n\n    });\n\n    _defineProperty(this, \"_removePointerEvents\", () => {\n      this.setState({\n        showPointerEvents: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      pin: {\n        belongsTo: this.props.id,\n        x: \"\",\n        y: \"\",\n        comment: \"\"\n      }\n    });\n  }\n\n  render() {\n    var block = this.props.block;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Subscribe, {\n      to: [globalState],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, globalState => React.createElement(PinOverlayDiv, {\n      showPointerEvents: this.state.showPointerEvents,\n      onClick: () => this._handlePinClick(globalState),\n      onMouseMove: e => this._onMouseMove(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.pin.x, \"\\\" \\\"\", this.state.pin.y)));\n  }\n\n} // export default withContainers([globalState])(PinOverlay);\n\n\nexport default PinOverlay;","map":{"version":3,"sources":["/Users/jakecasey/Documents/Projects/Bugs/skeleton-key-frontend/components/special/PinOverlay.js"],"names":["withContainers","Global","globalState","React","Component","Subscribe","styled","shortid","SickButton","waitForIframeScrollPosition","PinOverlayDiv","div","props","showPointerEvents","PinOverlay","pin","x","y","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","scroll","document","iframeScrollPosition","getElementById","contentWindow","getAttribute","setState","state","scrollPosition","_placePin","componentDidMount","belongsTo","id","comment","render","block","_handlePinClick","_onMouseMove"],"mappings":"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","sourcesContent":["import withContainers from \"../wrappers/withContainer\";\n\nimport { Global as globalState } from \"./Global\";\nimport React, { Component } from \"react\";\nimport { Subscribe } from \"unstated\";\n\nimport styled from \"styled-components\";\nimport shortid from \"shortid\";\n\nimport SickButton from \"../styles/SickButton\";\nimport { waitForIframeScrollPosition } from \"../../lib/helpers\";\n\nconst PinOverlayDiv = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  z-index: 2;\n  pointer-events: ${props => (props.showPointerEvents ? \"auto\" : \"none\")};\n`;\n\nclass PinOverlay extends Component {\n  state = {\n    showPointerEvents: true,\n    pin: { x: \"\", y: \"\" }\n  };\n\n  componentDidMount() {\n    this.setState({\n      pin: {\n        belongsTo: this.props.id,\n        x: \"\",\n        y: \"\",\n        comment: \"\"\n      }\n    });\n  }\n\n  _onMouseMove = e => {\n    var rect = e.target.getBoundingClientRect();\n    var x = e.clientX - rect.left; //x position within the element.\n    var y = e.clientY - rect.top; //y position within the element.\n\n    //get scroll position;\n    var scroll;\n    waitForIframeScrollPosition(document, () => {\n      var iframeScrollPosition = document\n        .getElementById(\"iframe\")\n        .contentWindow.document.getElementById(\"iframeScrollPosition\");\n\n      if (typeof iframeScrollPosition !== \"undefined\") {\n        scroll = iframeScrollPosition.getAttribute(\"y\");\n      } else {\n        scroll = \"0\";\n      }\n\n      // this.setState({ pin: { ...this.state.pin, x: e.screenX, y: e.screenY } });\n      this.setState({\n        pin: { ...this.state.pin, x: x, y: y, scrollPosition: { y: scroll } }\n      });\n    });\n  };\n\n  _handlePinClick = Global => {\n    Global._placePin(this.state.pin);\n\n    // Global._placePin(this.state.pin);\n  };\n\n  _removePointerEvents = () => {\n    this.setState({ showPointerEvents: false });\n  };\n\n  render() {\n    var block = this.props.block;\n    return (\n      <div>\n        <Subscribe to={[globalState]}>\n          {globalState => (\n            <PinOverlayDiv\n              showPointerEvents={this.state.showPointerEvents}\n              onClick={() => this._handlePinClick(globalState)}\n              onMouseMove={e => this._onMouseMove(e)}\n            >\n              {this.state.pin.x}\" \"{this.state.pin.y}\n            </PinOverlayDiv>\n          )}\n        </Subscribe>\n      </div>\n    );\n  }\n}\n\n// export default withContainers([globalState])(PinOverlay);\nexport default PinOverlay;\n"]},"metadata":{},"sourceType":"module"}