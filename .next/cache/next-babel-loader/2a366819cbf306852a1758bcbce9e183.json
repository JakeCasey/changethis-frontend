{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport withContainers from '../wrappers/withContainer';\nimport { Global as globalState } from './Global';\nimport React, { Component } from 'react';\nimport { Subscribe } from 'unstated';\nimport styled from 'styled-components';\nimport shortid from 'shortid';\nimport SickButton from '../styles/SickButton';\nconst PinOverlayDiv = styled.div.withConfig({\n  displayName: \"PinOverlay__PinOverlayDiv\",\n  componentId: \"sgig1q-0\"\n})([\"position:absolute;top:0px;left:0px;right:0px;bottom:0px;z-index:2;pointer-events:\", \";\"], props => props.showPointerEvents ? 'auto' : 'none');\n\nclass PinOverlay extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showPointerEvents: true,\n      pin: {\n        x: '',\n        y: ''\n      }\n    });\n\n    _defineProperty(this, \"_onMouseMove\", e => {\n      var rect = e.target.getBoundingClientRect();\n      var x = e.clientX - rect.left; //x position within the element.\n\n      var y = e.clientY - rect.top; //y position within the element.\n      //get scroll position;\n\n      var scroll;\n      var iframeScrollPosition = document.getElementById('iframe').contentWindow.document.getElementById('iframeScrollPosition');\n\n      if (iframeScrollPosition.getAttribute('y')) {\n        scroll = iframeScrollPosition.getAttribute('y');\n      } else {\n        scroll = '0';\n      } // this.setState({ pin: { ...this.state.pin, x: e.screenX, y: e.screenY } });\n\n\n      this.setState({\n        pin: _objectSpread({}, this.state.pin, {\n          x: x,\n          y: y,\n          scrollPosition: {\n            y: scroll\n          }\n        })\n      });\n    });\n\n    _defineProperty(this, \"_handlePinClick\", Global => {\n      Global._placePin(this.state.pin); // Global._placePin(this.state.pin);\n\n    });\n\n    _defineProperty(this, \"_removePointerEvents\", () => {\n      this.setState({\n        showPointerEvents: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      pin: {\n        belongsTo: this.props.id,\n        x: '',\n        y: '',\n        comment: ''\n      }\n    });\n  }\n\n  render() {\n    var block = this.props.block;\n    return React.createElement(\"div\", null, React.createElement(Subscribe, {\n      to: [Global]\n    }, Global => React.createElement(PinOverlayDiv, {\n      showPointerEvents: this.state.showPointerEvents,\n      onClick: () => this._handlePinClick(Global),\n      onMouseMove: e => this._onMouseMove(e)\n    }, this.state.pin.x, \"\\\" \\\"\", this.state.pin.y)));\n  }\n\n} // export default withContainers([globalState])(PinOverlay);\n\n\nexport default PinOverlay;","map":null,"metadata":{},"sourceType":"module"}