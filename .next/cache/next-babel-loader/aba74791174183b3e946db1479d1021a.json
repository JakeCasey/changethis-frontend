{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport withContainers from '../wrappers/withContainer';\nimport { Global as globalState } from './Global';\nimport React, { Component } from 'react';\nimport SickButton from '../styles/SickButton';\n\nvar BlockList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlockList, _Component);\n\n  function BlockList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BlockList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BlockList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    return _this;\n  }\n\n  _createClass(BlockList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var block = this.props.block;\n      return React.createElement(React.Fragment, null, React.createElement(SickButton, {\n        onClick: function onClick() {\n          return _this2.props.globalState.addSimpleTextBlock();\n        }\n      }, \"Add Simple Text Block\"), React.createElement(SickButton, {\n        onClick: function onClick() {\n          return _this2.props.globalState.addPinBlock();\n        }\n      }, \"Add Pin Block\"));\n    }\n  }]);\n\n  return BlockList;\n}(Component);\n\nexport default withContainers([globalState])(BlockList);","map":null,"metadata":{},"sourceType":"module"}