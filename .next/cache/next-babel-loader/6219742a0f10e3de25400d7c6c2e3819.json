{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport withContainers from '../wrappers/withContainer';\nimport { Global as globalState } from './Global';\nimport React, { Component } from 'react';\nimport { Subscribe } from 'unstated';\nimport { getIframeScrollPosition } from '../../lib/helpers';\nimport styled from 'styled-components';\nimport SickButton from '../styles/SickButton';\nimport Pin from './Pin';\nvar ShowPinsDiv = styled.div.withConfig({\n  displayName: \"ShowPins__ShowPinsDiv\",\n  componentId: \"sc-1acb6tt-0\"\n})([\"position:absolute;top:\", \";left:0px;right:0px;bottom:0px;z-index:2;pointer-events:none;\"], function (props) {\n  return props.scrollTop ? props.scrollTop : '0px';\n});\nvar timeout = '';\n\nvar ShowPins =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShowPins, _Component);\n\n  function ShowPins() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShowPins);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShowPins)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPosition\", function (event) {\n      var scroll = '';\n      var iframeScrollPosition = document.getElementById('iframe').contentWindow.document.getElementById('iframeScrollPosition');\n\n      if (iframeScrollPosition.getAttribute('y')) {\n        scroll = -iframeScrollPosition.getAttribute('y');\n      } else {\n        scroll = 0;\n      }\n\n      _this.setState({\n        scrollTop: scroll + 'px'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleScroll\", function () {\n      window.clearTimeout(timeout);\n      timeout = setTimeout(function () {\n        _this._updateScrollPosition();\n\n        setTimeout(_this._updateScrollPosition(), 150);\n      }, 150);\n\n      _this._updateScrollPosition();\n    });\n\n    return _this;\n  }\n\n  _createClass(ShowPins, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //get initial scroll pos\n      this._updateScrollPosition(); //attach scroll listener\n\n\n      var iframeScrollPosition = document.getElementById('iframe').contentWindow.document.addEventListener('scroll', this._handleScroll, false);\n    } //polling is almost accurate but needs a trail off perhaps an interval or a while statement\n    //that runs several more times over a few seconds.\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {// window.removeEventListener('scroll', this._updateScrollPosition, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var block = this.props.block;\n      return React.createElement(\"div\", null, React.createElement(Subscribe, {\n        to: [Global]\n      }, function (Global) {\n        return React.createElement(ShowPinsDiv, {\n          scrollTop: _this2.state.scrollTop\n        }, Global.state.pins.map(function (pin, i) {\n          return React.createElement(Pin, {\n            key: i,\n            pin: pin,\n            global: Global\n          });\n        }));\n      }));\n    }\n  }]);\n\n  return ShowPins;\n}(Component); // export default withContainers([globalState])(ShowPins);\n\n\nexport default ShowPins;","map":null,"metadata":{},"sourceType":"module"}